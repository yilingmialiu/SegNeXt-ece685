2022-11-29 01:05:26,837 - mmseg - INFO - Multi-processing start method is `None`
2022-11-29 01:05:26,837 - mmseg - INFO - OpenCV num_threads is `<built-in function getNumThreads>
2022-11-29 01:05:26,872 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.8 (default, Apr 13 2021, 19:58:26) [GCC 7.3.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.5, V11.5.119
GCC: gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-3)
PyTorch: 1.11.0+cu102
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.2-Product Build 20210312 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.12.0+cu102
OpenCV: 4.6.0
MMCV: 1.6.0
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.2
MMSegmentation: 0.24.1+
------------------------------------------------------------

2022-11-29 01:05:26,873 - mmseg - INFO - Distributed training: False
2022-11-29 01:05:27,163 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
ham_norm_cfg = dict(type='GN', num_groups=32, requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='MSCAN',
        embed_dims=[64, 128, 320, 512],
        mlp_ratios=[8, 8, 4, 4],
        drop_rate=0.0,
        drop_path_rate=0.3,
        depths=[3, 5, 27, 3],
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        init_cfg=dict(type='Pretrained', checkpoint='pretrained/mscan_l.pth')),
    decode_head=dict(
        type='LightHamHead',
        in_channels=[128, 320, 512],
        in_index=[1, 2, 3],
        channels=1024,
        ham_channels=1024,
        dropout_ratio=0.1,
        num_classes=5,
        norm_cfg=dict(type='GN', num_groups=32, requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss',
            use_sigmoid=False,
            loss_weight=1.0,
            class_weight=[0.5, 1, 1, 1, 1])),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'LandcoverDataset'
data_root = '/datacommons/carlsonlab/yl407/landcover_torchgeo/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type='LandcoverDataset',
        data_root='/datacommons/carlsonlab/yl407/landcover_torchgeo/',
        img_dir='images',
        ann_dir='labels',
        split='splits/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='LandcoverDataset',
        data_root='/datacommons/carlsonlab/yl407/landcover_torchgeo/',
        img_dir='images',
        ann_dir='labels',
        split='splits/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='LandcoverDataset',
        data_root='/datacommons/carlsonlab/yl407/landcover_torchgeo/',
        img_dir='images',
        ann_dir='labels',
        split='splits/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='AdamW',
    lr=6e-05,
    betas=(0.9, 0.999),
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0),
            head=dict(lr_mult=10.0))))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=40000)
checkpoint_config = dict(by_epoch=False, interval=5000)
evaluation = dict(interval=5000, metric='mIoU')
find_unused_parameters = True
work_dir = './work_dirs/segnext.large.512x512.landcover.40k_weight'
gpu_ids = [0]
auto_resume = False

2022-11-29 01:05:27,164 - mmseg - INFO - Set random seed to 1567766903, deterministic: False
2022-11-29 01:05:27,601 - mmseg - INFO - initialize MSCAN with init_cfg {'type': 'Pretrained', 'checkpoint': 'pretrained/mscan_l.pth'}
2022-11-29 01:05:31,319 - mmseg - INFO - initialize LightHamHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.patch_embed1.proj.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.0.bias - torch.Size([32]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.1.weight - torch.Size([32]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.1.bias - torch.Size([32]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.3.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.3.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.4.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed1.proj.4.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.layer_scale_1 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.layer_scale_2 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.norm1.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.norm1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.proj_1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.proj_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0_1.weight - torch.Size([64, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0_2.weight - torch.Size([64, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv0_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv1_1.weight - torch.Size([64, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv1_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv1_2.weight - torch.Size([64, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv1_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv2_1.weight - torch.Size([64, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv2_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv2_2.weight - torch.Size([64, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv2_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv3.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.spatial_gating_unit.conv3.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.proj_2.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.attn.proj_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.norm2.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.norm2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.fc1.weight - torch.Size([512, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.fc1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.dwconv.dwconv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.dwconv.dwconv.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.fc2.weight - torch.Size([64, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.0.mlp.fc2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.layer_scale_1 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.layer_scale_2 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.norm1.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.norm1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.proj_1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.proj_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0_1.weight - torch.Size([64, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0_2.weight - torch.Size([64, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv0_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv1_1.weight - torch.Size([64, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv1_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv1_2.weight - torch.Size([64, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv1_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv2_1.weight - torch.Size([64, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv2_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv2_2.weight - torch.Size([64, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv2_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv3.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.spatial_gating_unit.conv3.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.proj_2.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.attn.proj_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.norm2.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.norm2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.fc1.weight - torch.Size([512, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.fc1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.dwconv.dwconv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.dwconv.dwconv.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.fc2.weight - torch.Size([64, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.1.mlp.fc2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.layer_scale_1 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.layer_scale_2 - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.norm1.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.norm1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.proj_1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.proj_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0_1.weight - torch.Size([64, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0_2.weight - torch.Size([64, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv0_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv1_1.weight - torch.Size([64, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv1_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv1_2.weight - torch.Size([64, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv1_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv2_1.weight - torch.Size([64, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv2_1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv2_2.weight - torch.Size([64, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv2_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv3.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.spatial_gating_unit.conv3.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.proj_2.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.attn.proj_2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.norm2.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.norm2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.fc1.weight - torch.Size([512, 64, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.fc1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.dwconv.dwconv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.dwconv.dwconv.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.fc2.weight - torch.Size([64, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block1.2.mlp.fc2.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm1.weight - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm1.bias - torch.Size([64]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed2.proj.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed2.proj.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed2.norm.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed2.norm.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.layer_scale_1 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.layer_scale_2 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.proj_1.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.proj_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0_1.weight - torch.Size([128, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0_2.weight - torch.Size([128, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv0_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv1_1.weight - torch.Size([128, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv1_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv1_2.weight - torch.Size([128, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv1_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv2_1.weight - torch.Size([128, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv2_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv2_2.weight - torch.Size([128, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv2_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv3.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.spatial_gating_unit.conv3.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.proj_2.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.attn.proj_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.fc1.weight - torch.Size([1024, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.dwconv.dwconv.weight - torch.Size([1024, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.dwconv.dwconv.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.fc2.weight - torch.Size([128, 1024, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.0.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.layer_scale_1 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.layer_scale_2 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.proj_1.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.proj_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0_1.weight - torch.Size([128, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0_2.weight - torch.Size([128, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv0_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv1_1.weight - torch.Size([128, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv1_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv1_2.weight - torch.Size([128, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv1_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv2_1.weight - torch.Size([128, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv2_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv2_2.weight - torch.Size([128, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv2_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv3.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.spatial_gating_unit.conv3.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.proj_2.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.attn.proj_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.fc1.weight - torch.Size([1024, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.dwconv.dwconv.weight - torch.Size([1024, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.dwconv.dwconv.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.fc2.weight - torch.Size([128, 1024, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.1.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.layer_scale_1 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.layer_scale_2 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.proj_1.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.proj_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0_1.weight - torch.Size([128, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0_2.weight - torch.Size([128, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv0_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv1_1.weight - torch.Size([128, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv1_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv1_2.weight - torch.Size([128, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv1_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv2_1.weight - torch.Size([128, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv2_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv2_2.weight - torch.Size([128, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv2_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv3.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.spatial_gating_unit.conv3.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.proj_2.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.attn.proj_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.fc1.weight - torch.Size([1024, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.dwconv.dwconv.weight - torch.Size([1024, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.dwconv.dwconv.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.fc2.weight - torch.Size([128, 1024, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.2.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.layer_scale_1 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.layer_scale_2 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.proj_1.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.proj_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0_1.weight - torch.Size([128, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0_2.weight - torch.Size([128, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv0_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv1_1.weight - torch.Size([128, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv1_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv1_2.weight - torch.Size([128, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv1_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv2_1.weight - torch.Size([128, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv2_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv2_2.weight - torch.Size([128, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv2_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv3.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.spatial_gating_unit.conv3.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.proj_2.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.attn.proj_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.fc1.weight - torch.Size([1024, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.dwconv.dwconv.weight - torch.Size([1024, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.dwconv.dwconv.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.fc2.weight - torch.Size([128, 1024, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.3.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.layer_scale_1 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.layer_scale_2 - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.norm1.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.norm1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.proj_1.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.proj_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0_1.weight - torch.Size([128, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0_2.weight - torch.Size([128, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv0_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv1_1.weight - torch.Size([128, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv1_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv1_2.weight - torch.Size([128, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv1_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv2_1.weight - torch.Size([128, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv2_1.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv2_2.weight - torch.Size([128, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv2_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv3.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.spatial_gating_unit.conv3.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.proj_2.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.attn.proj_2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.fc1.weight - torch.Size([1024, 128, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.fc1.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.dwconv.dwconv.weight - torch.Size([1024, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.dwconv.dwconv.bias - torch.Size([1024]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.fc2.weight - torch.Size([128, 1024, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block2.4.mlp.fc2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm2.weight - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm2.bias - torch.Size([128]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed3.proj.weight - torch.Size([320, 128, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed3.proj.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed3.norm.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed3.norm.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.0.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.1.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.2.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.3.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.4.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.5.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.6.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.7.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.8.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.9.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.10.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.11.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.12.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.13.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.14.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.15.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.16.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.17.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.18.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.19.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.20.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.21.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.22.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.23.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.24.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.25.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.layer_scale_1 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.layer_scale_2 - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.norm1.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.norm1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.proj_1.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.proj_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0.weight - torch.Size([320, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0_1.weight - torch.Size([320, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0_2.weight - torch.Size([320, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv0_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv1_1.weight - torch.Size([320, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv1_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv1_2.weight - torch.Size([320, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv1_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv2_1.weight - torch.Size([320, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv2_1.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv2_2.weight - torch.Size([320, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv2_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv3.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.spatial_gating_unit.conv3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.proj_2.weight - torch.Size([320, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.attn.proj_2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.norm2.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.norm2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.fc1.weight - torch.Size([1280, 320, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.fc1.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.dwconv.dwconv.weight - torch.Size([1280, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.dwconv.dwconv.bias - torch.Size([1280]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.fc2.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block3.26.mlp.fc2.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm3.weight - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm3.bias - torch.Size([320]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed4.proj.weight - torch.Size([512, 320, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed4.proj.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed4.norm.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.patch_embed4.norm.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.layer_scale_1 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.layer_scale_2 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.proj_1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.proj_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0.weight - torch.Size([512, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0_1.weight - torch.Size([512, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0_2.weight - torch.Size([512, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv0_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv1_1.weight - torch.Size([512, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv1_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv1_2.weight - torch.Size([512, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv1_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv2_1.weight - torch.Size([512, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv2_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv2_2.weight - torch.Size([512, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv2_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.spatial_gating_unit.conv3.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.proj_2.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.attn.proj_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.fc1.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.dwconv.dwconv.weight - torch.Size([2048, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.dwconv.dwconv.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.fc2.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.0.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.layer_scale_1 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.layer_scale_2 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.proj_1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.proj_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0.weight - torch.Size([512, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0_1.weight - torch.Size([512, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0_2.weight - torch.Size([512, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv0_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv1_1.weight - torch.Size([512, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv1_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv1_2.weight - torch.Size([512, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv1_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv2_1.weight - torch.Size([512, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv2_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv2_2.weight - torch.Size([512, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv2_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.spatial_gating_unit.conv3.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.proj_2.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.attn.proj_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.fc1.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.dwconv.dwconv.weight - torch.Size([2048, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.dwconv.dwconv.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.fc2.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.1.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.layer_scale_1 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.layer_scale_2 - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.norm1.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.norm1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.proj_1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.proj_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0.weight - torch.Size([512, 1, 5, 5]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0_1.weight - torch.Size([512, 1, 1, 7]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0_2.weight - torch.Size([512, 1, 7, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv0_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv1_1.weight - torch.Size([512, 1, 1, 11]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv1_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv1_2.weight - torch.Size([512, 1, 11, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv1_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv2_1.weight - torch.Size([512, 1, 1, 21]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv2_1.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv2_2.weight - torch.Size([512, 1, 21, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv2_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.spatial_gating_unit.conv3.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.proj_2.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.attn.proj_2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.norm2.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.norm2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.fc1.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.fc1.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.dwconv.dwconv.weight - torch.Size([2048, 1, 3, 3]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.dwconv.dwconv.bias - torch.Size([2048]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.fc2.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.block4.2.mlp.fc2.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm4.weight - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

backbone.norm4.bias - torch.Size([512]): 
PretrainedInit: load from pretrained/mscan_l.pth 

decode_head.conv_seg.weight - torch.Size([5, 1024, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.squeeze.conv.weight - torch.Size([1024, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.squeeze.gn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.squeeze.gn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.hamburger.ham_in.conv.weight - torch.Size([1024, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.hamburger.ham_in.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.hamburger.ham_out.conv.weight - torch.Size([1024, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.hamburger.ham_out.gn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.hamburger.ham_out.gn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.align.conv.weight - torch.Size([1024, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.align.gn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.align.gn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2022-11-29 01:05:31,353 - mmseg - INFO - EncoderDecoder(
  (backbone): MSCAN(
    (patch_embed1): StemConv(
      (proj): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): _BatchNormXd(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): GELU()
        (3): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block1): ModuleList(
      (0): Block(
        (norm1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64)
            (conv0_1): Conv2d(64, 64, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=64)
            (conv0_2): Conv2d(64, 64, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=64)
            (conv1_1): Conv2d(64, 64, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=64)
            (conv1_2): Conv2d(64, 64, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=64)
            (conv2_1): Conv2d(64, 64, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=64)
            (conv2_2): Conv2d(64, 64, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=64)
            (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): Identity()
        (norm2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64)
            (conv0_1): Conv2d(64, 64, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=64)
            (conv0_2): Conv2d(64, 64, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=64)
            (conv1_1): Conv2d(64, 64, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=64)
            (conv1_2): Conv2d(64, 64, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=64)
            (conv2_1): Conv2d(64, 64, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=64)
            (conv2_2): Conv2d(64, 64, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=64)
            (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(64, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=64)
            (conv0_1): Conv2d(64, 64, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=64)
            (conv0_2): Conv2d(64, 64, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=64)
            (conv1_1): Conv2d(64, 64, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=64)
            (conv1_2): Conv2d(64, 64, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=64)
            (conv2_1): Conv2d(64, 64, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=64)
            (conv2_2): Conv2d(64, 64, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=64)
            (conv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512)
          )
          (act): GELU()
          (fc2): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    (patch_embed2): OverlapPatchEmbed(
      (proj): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (block2): ModuleList(
      (0): Block(
        (norm1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128)
            (conv0_1): Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=128)
            (conv0_2): Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=128)
            (conv1_1): Conv2d(128, 128, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=128)
            (conv1_2): Conv2d(128, 128, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=128)
            (conv2_1): Conv2d(128, 128, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=128)
            (conv2_2): Conv2d(128, 128, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=128)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128)
            (conv0_1): Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=128)
            (conv0_2): Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=128)
            (conv1_1): Conv2d(128, 128, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=128)
            (conv1_2): Conv2d(128, 128, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=128)
            (conv2_1): Conv2d(128, 128, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=128)
            (conv2_2): Conv2d(128, 128, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=128)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128)
            (conv0_1): Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=128)
            (conv0_2): Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=128)
            (conv1_1): Conv2d(128, 128, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=128)
            (conv1_2): Conv2d(128, 128, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=128)
            (conv2_1): Conv2d(128, 128, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=128)
            (conv2_2): Conv2d(128, 128, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=128)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128)
            (conv0_1): Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=128)
            (conv0_2): Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=128)
            (conv1_1): Conv2d(128, 128, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=128)
            (conv1_2): Conv2d(128, 128, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=128)
            (conv2_1): Conv2d(128, 128, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=128)
            (conv2_2): Conv2d(128, 128, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=128)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128)
            (conv0_1): Conv2d(128, 128, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=128)
            (conv0_2): Conv2d(128, 128, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=128)
            (conv1_1): Conv2d(128, 128, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=128)
            (conv1_2): Conv2d(128, 128, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=128)
            (conv2_1): Conv2d(128, 128, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=128)
            (conv2_2): Conv2d(128, 128, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=128)
            (conv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(128, 1024, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024)
          )
          (act): GELU()
          (fc2): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    (patch_embed3): OverlapPatchEmbed(
      (proj): Conv2d(128, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (block3): ModuleList(
      (0): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (3): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (4): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (5): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (6): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (7): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (8): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (9): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (10): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (11): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (12): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (13): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (14): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (15): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (16): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (17): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (18): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (19): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (20): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (21): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (22): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (23): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (24): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (25): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (26): Block(
        (norm1): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320)
            (conv0_1): Conv2d(320, 320, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=320)
            (conv0_2): Conv2d(320, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=320)
            (conv1_1): Conv2d(320, 320, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=320)
            (conv1_2): Conv2d(320, 320, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=320)
            (conv2_1): Conv2d(320, 320, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=320)
            (conv2_2): Conv2d(320, 320, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=320)
            (conv3): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1280)
          )
          (act): GELU()
          (fc2): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm3): LayerNorm((320,), eps=1e-05, elementwise_affine=True)
    (patch_embed4): OverlapPatchEmbed(
      (proj): Conv2d(320, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (norm): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (block4): ModuleList(
      (0): Block(
        (norm1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=512)
            (conv0_1): Conv2d(512, 512, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=512)
            (conv0_2): Conv2d(512, 512, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=512)
            (conv1_1): Conv2d(512, 512, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=512)
            (conv1_2): Conv2d(512, 512, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=512)
            (conv2_1): Conv2d(512, 512, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=512)
            (conv2_2): Conv2d(512, 512, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=512)
            (conv3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (1): Block(
        (norm1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=512)
            (conv0_1): Conv2d(512, 512, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=512)
            (conv0_2): Conv2d(512, 512, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=512)
            (conv1_1): Conv2d(512, 512, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=512)
            (conv1_2): Conv2d(512, 512, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=512)
            (conv2_1): Conv2d(512, 512, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=512)
            (conv2_2): Conv2d(512, 512, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=512)
            (conv3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
      (2): Block(
        (norm1): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (attn): SpatialAttention(
          (proj_1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          (activation): GELU()
          (spatial_gating_unit): AttentionModule(
            (conv0): Conv2d(512, 512, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=512)
            (conv0_1): Conv2d(512, 512, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3), groups=512)
            (conv0_2): Conv2d(512, 512, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0), groups=512)
            (conv1_1): Conv2d(512, 512, kernel_size=(1, 11), stride=(1, 1), padding=(0, 5), groups=512)
            (conv1_2): Conv2d(512, 512, kernel_size=(11, 1), stride=(1, 1), padding=(5, 0), groups=512)
            (conv2_1): Conv2d(512, 512, kernel_size=(1, 21), stride=(1, 1), padding=(0, 10), groups=512)
            (conv2_2): Conv2d(512, 512, kernel_size=(21, 1), stride=(1, 1), padding=(10, 0), groups=512)
            (conv3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (proj_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
        )
        (drop_path): DropPath()
        (norm2): _BatchNormXd(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (mlp): Mlp(
          (fc1): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1))
          (dwconv): DWConv(
            (dwconv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2048)
          )
          (act): GELU()
          (fc2): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm4): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  init_cfg={'type': 'Pretrained', 'checkpoint': 'pretrained/mscan_l.pth'}
  (decode_head): LightHamHead(
    input_transform=multiple_select, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(1024, 5, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (squeeze): ConvModule(
      (conv): Conv2d(960, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (gn): GroupNorm(32, 1024, eps=1e-05, affine=True)
      (activate): ReLU(inplace=True)
    )
    (hamburger): Hamburger(
      (ham_in): ConvModule(
        (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
      )
      (ham): NMF2D()
      (ham_out): ConvModule(
        (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (gn): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
    )
    (align): ConvModule(
      (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (gn): GroupNorm(32, 1024, eps=1e-05, affine=True)
      (activate): ReLU(inplace=True)
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2022-11-29 01:05:31,377 - mmseg - INFO - Loaded 7470 images
2022-11-29 01:05:32,171 - mmseg - INFO - Loaded 1602 images
2022-11-29 01:05:32,172 - mmseg - INFO - Start running, host: yl407@dcc-carlsonlab-gpu-16, work_dir: /work/yl407/SegNeXt/work_dirs/segnext.large.512x512.landcover.40k_weight
2022-11-29 01:05:32,172 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-11-29 01:05:32,172 - mmseg - INFO - workflow: [('train', 1)], max: 40000 iters
2022-11-29 01:05:32,172 - mmseg - INFO - Checkpoints will be saved to /work/yl407/SegNeXt/work_dirs/segnext.large.512x512.landcover.40k_weight by HardDiskBackend.
2022-11-29 01:05:46,737 - mmseg - INFO - Iter [50/40000]	lr: 1.958e-06, eta: 3:12:42, time: 0.289, data_time: 0.009, memory: 5537, decode.loss_ce: 0.8916, decode.acc_seg: 44.4107, loss: 0.8916
2022-11-29 01:05:59,592 - mmseg - INFO - Iter [100/40000]	lr: 3.950e-06, eta: 3:01:43, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.7452, decode.acc_seg: 50.1074, loss: 0.7452
2022-11-29 01:06:12,516 - mmseg - INFO - Iter [150/40000]	lr: 5.938e-06, eta: 2:58:12, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5803, decode.acc_seg: 47.6745, loss: 0.5803
2022-11-29 01:06:25,429 - mmseg - INFO - Iter [200/40000]	lr: 7.920e-06, eta: 2:56:18, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.7353, decode.acc_seg: 49.2319, loss: 0.7353
2022-11-29 01:06:38,365 - mmseg - INFO - Iter [250/40000]	lr: 9.898e-06, eta: 2:55:08, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6259, decode.acc_seg: 50.7135, loss: 0.6259
2022-11-29 01:06:51,318 - mmseg - INFO - Iter [300/40000]	lr: 1.187e-05, eta: 2:54:20, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6109, decode.acc_seg: 56.5623, loss: 0.6109
2022-11-29 01:07:04,245 - mmseg - INFO - Iter [350/40000]	lr: 1.384e-05, eta: 2:53:38, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6690, decode.acc_seg: 62.6811, loss: 0.6690
2022-11-29 01:07:17,156 - mmseg - INFO - Iter [400/40000]	lr: 1.580e-05, eta: 2:53:03, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5858, decode.acc_seg: 54.2852, loss: 0.5858
2022-11-29 01:07:30,079 - mmseg - INFO - Iter [450/40000]	lr: 1.776e-05, eta: 2:52:33, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6372, decode.acc_seg: 55.4893, loss: 0.6372
2022-11-29 01:07:42,986 - mmseg - INFO - Iter [500/40000]	lr: 1.971e-05, eta: 2:52:05, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4855, decode.acc_seg: 70.7261, loss: 0.4855
2022-11-29 01:07:55,881 - mmseg - INFO - Iter [550/40000]	lr: 2.166e-05, eta: 2:51:40, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5980, decode.acc_seg: 66.1952, loss: 0.5980
2022-11-29 01:08:08,784 - mmseg - INFO - Iter [600/40000]	lr: 2.360e-05, eta: 2:51:16, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5932, decode.acc_seg: 73.6245, loss: 0.5932
2022-11-29 01:08:21,686 - mmseg - INFO - Iter [650/40000]	lr: 2.554e-05, eta: 2:50:55, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5087, decode.acc_seg: 74.5497, loss: 0.5087
2022-11-29 01:08:34,591 - mmseg - INFO - Iter [700/40000]	lr: 2.747e-05, eta: 2:50:35, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5880, decode.acc_seg: 62.6185, loss: 0.5880
2022-11-29 01:08:47,482 - mmseg - INFO - Iter [750/40000]	lr: 2.940e-05, eta: 2:50:15, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6353, decode.acc_seg: 62.5793, loss: 0.6353
2022-11-29 01:09:00,563 - mmseg - INFO - Iter [800/40000]	lr: 3.132e-05, eta: 2:50:05, time: 0.262, data_time: 0.007, memory: 5537, decode.loss_ce: 0.5024, decode.acc_seg: 75.9679, loss: 0.5024
2022-11-29 01:09:13,468 - mmseg - INFO - Iter [850/40000]	lr: 3.324e-05, eta: 2:49:47, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5137, decode.acc_seg: 71.2051, loss: 0.5137
2022-11-29 01:09:26,424 - mmseg - INFO - Iter [900/40000]	lr: 3.515e-05, eta: 2:49:31, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4809, decode.acc_seg: 77.0441, loss: 0.4809
2022-11-29 01:09:39,405 - mmseg - INFO - Iter [950/40000]	lr: 3.706e-05, eta: 2:49:17, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3273, decode.acc_seg: 80.9683, loss: 0.3273
2022-11-29 01:09:52,308 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:09:52,309 - mmseg - INFO - Iter [1000/40000]	lr: 3.896e-05, eta: 2:49:00, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3121, decode.acc_seg: 80.1496, loss: 0.3121
2022-11-29 01:10:05,276 - mmseg - INFO - Iter [1050/40000]	lr: 4.086e-05, eta: 2:48:46, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5104, decode.acc_seg: 74.8863, loss: 0.5104
2022-11-29 01:10:18,499 - mmseg - INFO - Iter [1100/40000]	lr: 4.275e-05, eta: 2:48:41, time: 0.264, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5416, decode.acc_seg: 70.6574, loss: 0.5416
2022-11-29 01:10:31,725 - mmseg - INFO - Iter [1150/40000]	lr: 4.464e-05, eta: 2:48:35, time: 0.264, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4544, decode.acc_seg: 76.1984, loss: 0.4544
2022-11-29 01:10:44,689 - mmseg - INFO - Iter [1200/40000]	lr: 4.652e-05, eta: 2:48:20, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4474, decode.acc_seg: 78.8598, loss: 0.4474
2022-11-29 01:10:57,632 - mmseg - INFO - Iter [1250/40000]	lr: 4.840e-05, eta: 2:48:05, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4349, decode.acc_seg: 75.7112, loss: 0.4349
2022-11-29 01:11:10,551 - mmseg - INFO - Iter [1300/40000]	lr: 5.027e-05, eta: 2:47:49, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.6050, decode.acc_seg: 73.8392, loss: 0.6050
2022-11-29 01:11:23,441 - mmseg - INFO - Iter [1350/40000]	lr: 5.214e-05, eta: 2:47:33, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4629, decode.acc_seg: 68.4349, loss: 0.4629
2022-11-29 01:11:36,382 - mmseg - INFO - Iter [1400/40000]	lr: 5.400e-05, eta: 2:47:18, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4029, decode.acc_seg: 80.0082, loss: 0.4029
2022-11-29 01:11:49,309 - mmseg - INFO - Iter [1450/40000]	lr: 5.586e-05, eta: 2:47:03, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4075, decode.acc_seg: 78.8954, loss: 0.4075
2022-11-29 01:12:02,220 - mmseg - INFO - Iter [1500/40000]	lr: 5.771e-05, eta: 2:46:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3761, decode.acc_seg: 77.7435, loss: 0.3761
2022-11-29 01:12:15,103 - mmseg - INFO - Iter [1550/40000]	lr: 5.768e-05, eta: 2:46:32, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5113, decode.acc_seg: 72.1704, loss: 0.5113
2022-11-29 01:12:28,032 - mmseg - INFO - Iter [1600/40000]	lr: 5.760e-05, eta: 2:46:17, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4529, decode.acc_seg: 77.2606, loss: 0.4529
2022-11-29 01:12:40,969 - mmseg - INFO - Iter [1650/40000]	lr: 5.753e-05, eta: 2:46:03, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4202, decode.acc_seg: 69.8292, loss: 0.4202
2022-11-29 01:12:53,870 - mmseg - INFO - Iter [1700/40000]	lr: 5.745e-05, eta: 2:45:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4713, decode.acc_seg: 71.2821, loss: 0.4713
2022-11-29 01:13:06,849 - mmseg - INFO - Iter [1750/40000]	lr: 5.738e-05, eta: 2:45:35, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4243, decode.acc_seg: 75.7539, loss: 0.4243
2022-11-29 01:13:19,724 - mmseg - INFO - Iter [1800/40000]	lr: 5.730e-05, eta: 2:45:19, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3904, decode.acc_seg: 74.6177, loss: 0.3904
2022-11-29 01:13:32,674 - mmseg - INFO - Iter [1850/40000]	lr: 5.723e-05, eta: 2:45:06, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3747, decode.acc_seg: 75.6927, loss: 0.3747
2022-11-29 01:13:45,530 - mmseg - INFO - Iter [1900/40000]	lr: 5.715e-05, eta: 2:44:50, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4654, decode.acc_seg: 70.3878, loss: 0.4654
2022-11-29 01:13:58,407 - mmseg - INFO - Iter [1950/40000]	lr: 5.708e-05, eta: 2:44:35, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3867, decode.acc_seg: 78.9798, loss: 0.3867
2022-11-29 01:14:11,279 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:14:11,280 - mmseg - INFO - Iter [2000/40000]	lr: 5.700e-05, eta: 2:44:20, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2993, decode.acc_seg: 81.3875, loss: 0.2993
2022-11-29 01:14:24,181 - mmseg - INFO - Iter [2050/40000]	lr: 5.693e-05, eta: 2:44:06, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2847, decode.acc_seg: 81.7706, loss: 0.2847
2022-11-29 01:14:37,093 - mmseg - INFO - Iter [2100/40000]	lr: 5.685e-05, eta: 2:43:52, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2561, decode.acc_seg: 84.7220, loss: 0.2561
2022-11-29 01:14:49,965 - mmseg - INFO - Iter [2150/40000]	lr: 5.678e-05, eta: 2:43:37, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2554, decode.acc_seg: 85.4488, loss: 0.2554
2022-11-29 01:15:02,874 - mmseg - INFO - Iter [2200/40000]	lr: 5.670e-05, eta: 2:43:23, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3104, decode.acc_seg: 81.0902, loss: 0.3104
2022-11-29 01:15:15,763 - mmseg - INFO - Iter [2250/40000]	lr: 5.663e-05, eta: 2:43:09, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5833, decode.acc_seg: 70.8649, loss: 0.5833
2022-11-29 01:15:28,675 - mmseg - INFO - Iter [2300/40000]	lr: 5.655e-05, eta: 2:42:55, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3202, decode.acc_seg: 82.3168, loss: 0.3202
2022-11-29 01:15:41,577 - mmseg - INFO - Iter [2350/40000]	lr: 5.648e-05, eta: 2:42:41, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4797, decode.acc_seg: 66.3845, loss: 0.4797
2022-11-29 01:15:54,450 - mmseg - INFO - Iter [2400/40000]	lr: 5.640e-05, eta: 2:42:26, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3837, decode.acc_seg: 72.9153, loss: 0.3837
2022-11-29 01:16:07,329 - mmseg - INFO - Iter [2450/40000]	lr: 5.633e-05, eta: 2:42:12, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2042, decode.acc_seg: 88.3137, loss: 0.2042
2022-11-29 01:16:20,256 - mmseg - INFO - Iter [2500/40000]	lr: 5.625e-05, eta: 2:41:59, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2525, decode.acc_seg: 85.9339, loss: 0.2525
2022-11-29 01:16:33,162 - mmseg - INFO - Iter [2550/40000]	lr: 5.618e-05, eta: 2:41:45, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5027, decode.acc_seg: 68.9389, loss: 0.5027
2022-11-29 01:16:46,072 - mmseg - INFO - Iter [2600/40000]	lr: 5.610e-05, eta: 2:41:31, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2180, decode.acc_seg: 87.1307, loss: 0.2180
2022-11-29 01:16:59,023 - mmseg - INFO - Iter [2650/40000]	lr: 5.603e-05, eta: 2:41:18, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4113, decode.acc_seg: 77.9213, loss: 0.4113
2022-11-29 01:17:12,000 - mmseg - INFO - Iter [2700/40000]	lr: 5.595e-05, eta: 2:41:06, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2572, decode.acc_seg: 83.4848, loss: 0.2572
2022-11-29 01:17:24,880 - mmseg - INFO - Iter [2750/40000]	lr: 5.588e-05, eta: 2:40:52, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3585, decode.acc_seg: 82.3653, loss: 0.3585
2022-11-29 01:17:37,789 - mmseg - INFO - Iter [2800/40000]	lr: 5.580e-05, eta: 2:40:38, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2710, decode.acc_seg: 83.0292, loss: 0.2710
2022-11-29 01:17:50,692 - mmseg - INFO - Iter [2850/40000]	lr: 5.573e-05, eta: 2:40:24, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.5838, decode.acc_seg: 75.7489, loss: 0.5838
2022-11-29 01:18:03,605 - mmseg - INFO - Iter [2900/40000]	lr: 5.565e-05, eta: 2:40:11, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3951, decode.acc_seg: 75.5693, loss: 0.3951
2022-11-29 01:18:16,516 - mmseg - INFO - Iter [2950/40000]	lr: 5.558e-05, eta: 2:39:57, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3657, decode.acc_seg: 76.1852, loss: 0.3657
2022-11-29 01:18:29,446 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:18:29,446 - mmseg - INFO - Iter [3000/40000]	lr: 5.550e-05, eta: 2:39:44, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2903, decode.acc_seg: 84.1263, loss: 0.2903
2022-11-29 01:18:42,365 - mmseg - INFO - Iter [3050/40000]	lr: 5.543e-05, eta: 2:39:31, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3073, decode.acc_seg: 83.2208, loss: 0.3073
2022-11-29 01:18:55,274 - mmseg - INFO - Iter [3100/40000]	lr: 5.535e-05, eta: 2:39:17, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3041, decode.acc_seg: 85.9907, loss: 0.3041
2022-11-29 01:19:08,227 - mmseg - INFO - Iter [3150/40000]	lr: 5.528e-05, eta: 2:39:04, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3293, decode.acc_seg: 76.3999, loss: 0.3293
2022-11-29 01:19:21,148 - mmseg - INFO - Iter [3200/40000]	lr: 5.520e-05, eta: 2:38:51, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3474, decode.acc_seg: 77.9461, loss: 0.3474
2022-11-29 01:19:34,124 - mmseg - INFO - Iter [3250/40000]	lr: 5.513e-05, eta: 2:38:38, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3194, decode.acc_seg: 80.3217, loss: 0.3194
2022-11-29 01:19:47,054 - mmseg - INFO - Iter [3300/40000]	lr: 5.505e-05, eta: 2:38:25, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2719, decode.acc_seg: 83.6141, loss: 0.2719
2022-11-29 01:19:59,926 - mmseg - INFO - Iter [3350/40000]	lr: 5.498e-05, eta: 2:38:11, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2737, decode.acc_seg: 83.2863, loss: 0.2737
2022-11-29 01:20:13,008 - mmseg - INFO - Iter [3400/40000]	lr: 5.490e-05, eta: 2:38:00, time: 0.262, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2627, decode.acc_seg: 83.3083, loss: 0.2627
2022-11-29 01:20:26,031 - mmseg - INFO - Iter [3450/40000]	lr: 5.483e-05, eta: 2:37:48, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2416, decode.acc_seg: 82.1234, loss: 0.2416
2022-11-29 01:20:38,945 - mmseg - INFO - Iter [3500/40000]	lr: 5.475e-05, eta: 2:37:34, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.4244, decode.acc_seg: 79.4955, loss: 0.4244
2022-11-29 01:20:51,833 - mmseg - INFO - Iter [3550/40000]	lr: 5.468e-05, eta: 2:37:21, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2678, decode.acc_seg: 84.7466, loss: 0.2678
2022-11-29 01:21:04,732 - mmseg - INFO - Iter [3600/40000]	lr: 5.460e-05, eta: 2:37:07, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2502, decode.acc_seg: 83.0462, loss: 0.2502
2022-11-29 01:21:17,708 - mmseg - INFO - Iter [3650/40000]	lr: 5.453e-05, eta: 2:36:55, time: 0.260, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1911, decode.acc_seg: 88.6459, loss: 0.1911
2022-11-29 01:21:30,621 - mmseg - INFO - Iter [3700/40000]	lr: 5.445e-05, eta: 2:36:41, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2020, decode.acc_seg: 85.6036, loss: 0.2020
2022-11-29 01:21:43,547 - mmseg - INFO - Iter [3750/40000]	lr: 5.438e-05, eta: 2:36:28, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2672, decode.acc_seg: 83.5237, loss: 0.2672
2022-11-29 01:21:56,476 - mmseg - INFO - Iter [3800/40000]	lr: 5.430e-05, eta: 2:36:15, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2246, decode.acc_seg: 85.2121, loss: 0.2246
2022-11-29 01:22:09,389 - mmseg - INFO - Iter [3850/40000]	lr: 5.423e-05, eta: 2:36:02, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2488, decode.acc_seg: 83.4412, loss: 0.2488
2022-11-29 01:22:22,288 - mmseg - INFO - Iter [3900/40000]	lr: 5.415e-05, eta: 2:35:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1721, decode.acc_seg: 89.7232, loss: 0.1721
2022-11-29 01:22:35,192 - mmseg - INFO - Iter [3950/40000]	lr: 5.408e-05, eta: 2:35:35, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2009, decode.acc_seg: 87.5584, loss: 0.2009
2022-11-29 01:22:48,083 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:22:48,083 - mmseg - INFO - Iter [4000/40000]	lr: 5.400e-05, eta: 2:35:21, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2760, decode.acc_seg: 85.4297, loss: 0.2760
2022-11-29 01:23:00,956 - mmseg - INFO - Iter [4050/40000]	lr: 5.393e-05, eta: 2:35:08, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2168, decode.acc_seg: 85.1478, loss: 0.2168
2022-11-29 01:23:13,836 - mmseg - INFO - Iter [4100/40000]	lr: 5.385e-05, eta: 2:34:54, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3261, decode.acc_seg: 79.8783, loss: 0.3261
2022-11-29 01:23:26,722 - mmseg - INFO - Iter [4150/40000]	lr: 5.378e-05, eta: 2:34:41, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2536, decode.acc_seg: 82.9053, loss: 0.2536
2022-11-29 01:23:39,597 - mmseg - INFO - Iter [4200/40000]	lr: 5.370e-05, eta: 2:34:27, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2153, decode.acc_seg: 87.8316, loss: 0.2153
2022-11-29 01:23:52,462 - mmseg - INFO - Iter [4250/40000]	lr: 5.363e-05, eta: 2:34:14, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2390, decode.acc_seg: 84.0180, loss: 0.2390
2022-11-29 01:24:05,323 - mmseg - INFO - Iter [4300/40000]	lr: 5.355e-05, eta: 2:34:00, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3520, decode.acc_seg: 75.4214, loss: 0.3520
2022-11-29 01:24:18,127 - mmseg - INFO - Iter [4350/40000]	lr: 5.348e-05, eta: 2:33:46, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2555, decode.acc_seg: 83.1877, loss: 0.2555
2022-11-29 01:24:30,930 - mmseg - INFO - Iter [4400/40000]	lr: 5.340e-05, eta: 2:33:32, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.4058, decode.acc_seg: 76.3351, loss: 0.4058
2022-11-29 01:24:43,625 - mmseg - INFO - Iter [4450/40000]	lr: 5.333e-05, eta: 2:33:17, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.3046, decode.acc_seg: 81.6087, loss: 0.3046
2022-11-29 01:24:56,251 - mmseg - INFO - Iter [4500/40000]	lr: 5.325e-05, eta: 2:33:02, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2519, decode.acc_seg: 84.5682, loss: 0.2519
2022-11-29 01:25:08,864 - mmseg - INFO - Iter [4550/40000]	lr: 5.318e-05, eta: 2:32:46, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2459, decode.acc_seg: 85.1554, loss: 0.2459
2022-11-29 01:25:21,505 - mmseg - INFO - Iter [4600/40000]	lr: 5.310e-05, eta: 2:32:31, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2408, decode.acc_seg: 84.6171, loss: 0.2408
2022-11-29 01:25:34,197 - mmseg - INFO - Iter [4650/40000]	lr: 5.303e-05, eta: 2:32:16, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2965, decode.acc_seg: 82.7526, loss: 0.2965
2022-11-29 01:25:46,801 - mmseg - INFO - Iter [4700/40000]	lr: 5.295e-05, eta: 2:32:01, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.3201, decode.acc_seg: 81.8860, loss: 0.3201
2022-11-29 01:25:59,465 - mmseg - INFO - Iter [4750/40000]	lr: 5.288e-05, eta: 2:31:46, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2503, decode.acc_seg: 86.5609, loss: 0.2503
2022-11-29 01:26:12,119 - mmseg - INFO - Iter [4800/40000]	lr: 5.280e-05, eta: 2:31:31, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1758, decode.acc_seg: 88.3785, loss: 0.1758
2022-11-29 01:26:24,853 - mmseg - INFO - Iter [4850/40000]	lr: 5.273e-05, eta: 2:31:17, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1696, decode.acc_seg: 88.9682, loss: 0.1696
2022-11-29 01:26:37,525 - mmseg - INFO - Iter [4900/40000]	lr: 5.265e-05, eta: 2:31:03, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2507, decode.acc_seg: 82.8324, loss: 0.2507
2022-11-29 01:26:50,168 - mmseg - INFO - Iter [4950/40000]	lr: 5.258e-05, eta: 2:30:48, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2311, decode.acc_seg: 86.6505, loss: 0.2311
2022-11-29 01:27:02,815 - mmseg - INFO - Saving checkpoint at 5000 iterations
2022-11-29 01:27:04,643 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:27:04,643 - mmseg - INFO - Iter [5000/40000]	lr: 5.250e-05, eta: 2:30:46, time: 0.290, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2041, decode.acc_seg: 85.5957, loss: 0.2041
2022-11-29 01:28:26,522 - mmseg - INFO - per class results:
2022-11-29 01:28:26,523 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.38 | 92.17 |
|  building  | 48.72 | 59.61 |
|  woodland  | 81.37 | 89.54 |
|   water    | 56.56 | 70.08 |
|    road    | 40.96 | 54.69 |
+------------+-------+-------+
2022-11-29 01:28:26,523 - mmseg - INFO - Summary:
2022-11-29 01:28:26,524 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 89.16 | 62.4 | 73.22 |
+-------+------+-------+
2022-11-29 01:28:26,527 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:28:26,527 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8916, mIoU: 0.6240, mAcc: 0.7322, IoU.background: 0.8438, IoU.building: 0.4872, IoU.woodland: 0.8137, IoU.water: 0.5656, IoU.road: 0.4096, Acc.background: 0.9217, Acc.building: 0.5961, Acc.woodland: 0.8954, Acc.water: 0.7008, Acc.road: 0.5469
2022-11-29 01:28:39,574 - mmseg - INFO - Iter [5050/40000]	lr: 5.243e-05, eta: 2:40:00, time: 1.899, data_time: 1.643, memory: 5537, decode.loss_ce: 0.2825, decode.acc_seg: 84.7971, loss: 0.2825
2022-11-29 01:28:52,475 - mmseg - INFO - Iter [5100/40000]	lr: 5.235e-05, eta: 2:39:41, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2746, decode.acc_seg: 86.3239, loss: 0.2746
2022-11-29 01:29:05,369 - mmseg - INFO - Iter [5150/40000]	lr: 5.228e-05, eta: 2:39:22, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2667, decode.acc_seg: 76.9131, loss: 0.2667
2022-11-29 01:29:18,368 - mmseg - INFO - Iter [5200/40000]	lr: 5.220e-05, eta: 2:39:03, time: 0.260, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2305, decode.acc_seg: 86.6262, loss: 0.2305
2022-11-29 01:29:31,314 - mmseg - INFO - Iter [5250/40000]	lr: 5.213e-05, eta: 2:38:44, time: 0.259, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2816, decode.acc_seg: 84.5673, loss: 0.2816
2022-11-29 01:29:44,220 - mmseg - INFO - Iter [5300/40000]	lr: 5.205e-05, eta: 2:38:25, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2900, decode.acc_seg: 79.8892, loss: 0.2900
2022-11-29 01:29:57,124 - mmseg - INFO - Iter [5350/40000]	lr: 5.198e-05, eta: 2:38:06, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2262, decode.acc_seg: 85.2992, loss: 0.2262
2022-11-29 01:30:10,216 - mmseg - INFO - Iter [5400/40000]	lr: 5.190e-05, eta: 2:37:49, time: 0.262, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2048, decode.acc_seg: 84.5131, loss: 0.2048
2022-11-29 01:30:23,876 - mmseg - INFO - Iter [5450/40000]	lr: 5.183e-05, eta: 2:37:35, time: 0.273, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2143, decode.acc_seg: 87.1645, loss: 0.2143
2022-11-29 01:30:36,667 - mmseg - INFO - Iter [5500/40000]	lr: 5.175e-05, eta: 2:37:16, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1507, decode.acc_seg: 90.3388, loss: 0.1507
2022-11-29 01:30:49,565 - mmseg - INFO - Iter [5550/40000]	lr: 5.168e-05, eta: 2:36:57, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2958, decode.acc_seg: 80.1518, loss: 0.2958
2022-11-29 01:31:02,440 - mmseg - INFO - Iter [5600/40000]	lr: 5.160e-05, eta: 2:36:39, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1982, decode.acc_seg: 87.1133, loss: 0.1982
2022-11-29 01:31:15,323 - mmseg - INFO - Iter [5650/40000]	lr: 5.153e-05, eta: 2:36:20, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1817, decode.acc_seg: 89.8175, loss: 0.1817
2022-11-29 01:31:28,236 - mmseg - INFO - Iter [5700/40000]	lr: 5.145e-05, eta: 2:36:02, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2033, decode.acc_seg: 88.0204, loss: 0.2033
2022-11-29 01:31:41,136 - mmseg - INFO - Iter [5750/40000]	lr: 5.138e-05, eta: 2:35:44, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2540, decode.acc_seg: 82.1067, loss: 0.2540
2022-11-29 01:31:54,035 - mmseg - INFO - Iter [5800/40000]	lr: 5.130e-05, eta: 2:35:26, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2527, decode.acc_seg: 84.0726, loss: 0.2527
2022-11-29 01:32:06,923 - mmseg - INFO - Iter [5850/40000]	lr: 5.123e-05, eta: 2:35:08, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2220, decode.acc_seg: 85.7046, loss: 0.2220
2022-11-29 01:32:19,801 - mmseg - INFO - Iter [5900/40000]	lr: 5.115e-05, eta: 2:34:50, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2284, decode.acc_seg: 86.6766, loss: 0.2284
2022-11-29 01:32:32,685 - mmseg - INFO - Iter [5950/40000]	lr: 5.108e-05, eta: 2:34:32, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1668, decode.acc_seg: 89.5632, loss: 0.1668
2022-11-29 01:32:45,567 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:32:45,568 - mmseg - INFO - Iter [6000/40000]	lr: 5.100e-05, eta: 2:34:14, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2333, decode.acc_seg: 87.1234, loss: 0.2333
2022-11-29 01:32:58,457 - mmseg - INFO - Iter [6050/40000]	lr: 5.093e-05, eta: 2:33:57, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1955, decode.acc_seg: 89.1021, loss: 0.1955
2022-11-29 01:33:11,350 - mmseg - INFO - Iter [6100/40000]	lr: 5.085e-05, eta: 2:33:39, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3226, decode.acc_seg: 78.5309, loss: 0.3226
2022-11-29 01:33:24,305 - mmseg - INFO - Iter [6150/40000]	lr: 5.078e-05, eta: 2:33:22, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2075, decode.acc_seg: 87.7268, loss: 0.2075
2022-11-29 01:33:37,177 - mmseg - INFO - Iter [6200/40000]	lr: 5.070e-05, eta: 2:33:05, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1776, decode.acc_seg: 90.0888, loss: 0.1776
2022-11-29 01:33:50,143 - mmseg - INFO - Iter [6250/40000]	lr: 5.063e-05, eta: 2:32:48, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2518, decode.acc_seg: 86.1104, loss: 0.2518
2022-11-29 01:34:03,034 - mmseg - INFO - Iter [6300/40000]	lr: 5.055e-05, eta: 2:32:30, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3337, decode.acc_seg: 83.6768, loss: 0.3337
2022-11-29 01:34:15,886 - mmseg - INFO - Iter [6350/40000]	lr: 5.048e-05, eta: 2:32:13, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.3191, decode.acc_seg: 82.5371, loss: 0.3191
2022-11-29 01:34:28,793 - mmseg - INFO - Iter [6400/40000]	lr: 5.040e-05, eta: 2:31:56, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2262, decode.acc_seg: 85.9104, loss: 0.2262
2022-11-29 01:34:41,694 - mmseg - INFO - Iter [6450/40000]	lr: 5.033e-05, eta: 2:31:39, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2761, decode.acc_seg: 83.4840, loss: 0.2761
2022-11-29 01:34:54,575 - mmseg - INFO - Iter [6500/40000]	lr: 5.025e-05, eta: 2:31:22, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2119, decode.acc_seg: 88.5874, loss: 0.2119
2022-11-29 01:35:07,458 - mmseg - INFO - Iter [6550/40000]	lr: 5.018e-05, eta: 2:31:05, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1694, decode.acc_seg: 89.8558, loss: 0.1694
2022-11-29 01:35:20,376 - mmseg - INFO - Iter [6600/40000]	lr: 5.010e-05, eta: 2:30:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2085, decode.acc_seg: 83.2104, loss: 0.2085
2022-11-29 01:35:33,457 - mmseg - INFO - Iter [6650/40000]	lr: 5.003e-05, eta: 2:30:32, time: 0.262, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1772, decode.acc_seg: 87.8460, loss: 0.1772
2022-11-29 01:35:46,376 - mmseg - INFO - Iter [6700/40000]	lr: 4.995e-05, eta: 2:30:15, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2144, decode.acc_seg: 86.9340, loss: 0.2144
2022-11-29 01:35:59,314 - mmseg - INFO - Iter [6750/40000]	lr: 4.988e-05, eta: 2:29:59, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2165, decode.acc_seg: 87.1561, loss: 0.2165
2022-11-29 01:36:12,238 - mmseg - INFO - Iter [6800/40000]	lr: 4.980e-05, eta: 2:29:42, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2170, decode.acc_seg: 87.5082, loss: 0.2170
2022-11-29 01:36:25,142 - mmseg - INFO - Iter [6850/40000]	lr: 4.973e-05, eta: 2:29:26, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2804, decode.acc_seg: 83.4804, loss: 0.2804
2022-11-29 01:36:38,043 - mmseg - INFO - Iter [6900/40000]	lr: 4.965e-05, eta: 2:29:09, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1717, decode.acc_seg: 89.5804, loss: 0.1717
2022-11-29 01:36:50,908 - mmseg - INFO - Iter [6950/40000]	lr: 4.958e-05, eta: 2:28:53, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2130, decode.acc_seg: 86.5813, loss: 0.2130
2022-11-29 01:37:03,775 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:37:03,775 - mmseg - INFO - Iter [7000/40000]	lr: 4.950e-05, eta: 2:28:36, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2019, decode.acc_seg: 86.9080, loss: 0.2019
2022-11-29 01:37:16,598 - mmseg - INFO - Iter [7050/40000]	lr: 4.943e-05, eta: 2:28:19, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1719, decode.acc_seg: 90.2988, loss: 0.1719
2022-11-29 01:37:29,575 - mmseg - INFO - Iter [7100/40000]	lr: 4.935e-05, eta: 2:28:04, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1432, decode.acc_seg: 91.7865, loss: 0.1432
2022-11-29 01:37:42,445 - mmseg - INFO - Iter [7150/40000]	lr: 4.928e-05, eta: 2:27:47, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3047, decode.acc_seg: 81.5045, loss: 0.3047
2022-11-29 01:37:55,285 - mmseg - INFO - Iter [7200/40000]	lr: 4.920e-05, eta: 2:27:31, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1574, decode.acc_seg: 91.2851, loss: 0.1574
2022-11-29 01:38:08,168 - mmseg - INFO - Iter [7250/40000]	lr: 4.913e-05, eta: 2:27:14, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2585, decode.acc_seg: 82.0301, loss: 0.2585
2022-11-29 01:38:21,067 - mmseg - INFO - Iter [7300/40000]	lr: 4.905e-05, eta: 2:26:58, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1697, decode.acc_seg: 87.5988, loss: 0.1697
2022-11-29 01:38:33,946 - mmseg - INFO - Iter [7350/40000]	lr: 4.898e-05, eta: 2:26:42, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1625, decode.acc_seg: 88.2568, loss: 0.1625
2022-11-29 01:38:46,852 - mmseg - INFO - Iter [7400/40000]	lr: 4.890e-05, eta: 2:26:26, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1638, decode.acc_seg: 87.2420, loss: 0.1638
2022-11-29 01:38:59,754 - mmseg - INFO - Iter [7450/40000]	lr: 4.883e-05, eta: 2:26:10, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1519, decode.acc_seg: 89.7895, loss: 0.1519
2022-11-29 01:39:14,899 - mmseg - INFO - Iter [7500/40000]	lr: 4.875e-05, eta: 2:26:04, time: 0.303, data_time: 0.047, memory: 5537, decode.loss_ce: 0.2342, decode.acc_seg: 83.6967, loss: 0.2342
2022-11-29 01:39:27,788 - mmseg - INFO - Iter [7550/40000]	lr: 4.868e-05, eta: 2:25:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2236, decode.acc_seg: 86.7636, loss: 0.2236
2022-11-29 01:39:40,656 - mmseg - INFO - Iter [7600/40000]	lr: 4.860e-05, eta: 2:25:32, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1814, decode.acc_seg: 86.8499, loss: 0.1814
2022-11-29 01:39:53,483 - mmseg - INFO - Iter [7650/40000]	lr: 4.853e-05, eta: 2:25:15, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1901, decode.acc_seg: 88.8319, loss: 0.1901
2022-11-29 01:40:06,330 - mmseg - INFO - Iter [7700/40000]	lr: 4.845e-05, eta: 2:24:59, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2467, decode.acc_seg: 86.2495, loss: 0.2467
2022-11-29 01:40:19,186 - mmseg - INFO - Iter [7750/40000]	lr: 4.838e-05, eta: 2:24:43, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2633, decode.acc_seg: 85.3539, loss: 0.2633
2022-11-29 01:40:32,086 - mmseg - INFO - Iter [7800/40000]	lr: 4.830e-05, eta: 2:24:28, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2052, decode.acc_seg: 88.3421, loss: 0.2052
2022-11-29 01:40:44,935 - mmseg - INFO - Iter [7850/40000]	lr: 4.823e-05, eta: 2:24:12, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2099, decode.acc_seg: 85.9695, loss: 0.2099
2022-11-29 01:40:57,768 - mmseg - INFO - Iter [7900/40000]	lr: 4.815e-05, eta: 2:23:56, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2160, decode.acc_seg: 89.0657, loss: 0.2160
2022-11-29 01:41:10,613 - mmseg - INFO - Iter [7950/40000]	lr: 4.808e-05, eta: 2:23:40, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1703, decode.acc_seg: 86.9983, loss: 0.1703
2022-11-29 01:41:23,510 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:41:23,510 - mmseg - INFO - Iter [8000/40000]	lr: 4.800e-05, eta: 2:23:24, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1834, decode.acc_seg: 86.7281, loss: 0.1834
2022-11-29 01:41:36,457 - mmseg - INFO - Iter [8050/40000]	lr: 4.793e-05, eta: 2:23:09, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2710, decode.acc_seg: 84.4721, loss: 0.2710
2022-11-29 01:41:49,327 - mmseg - INFO - Iter [8100/40000]	lr: 4.785e-05, eta: 2:22:53, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2407, decode.acc_seg: 82.9615, loss: 0.2407
2022-11-29 01:42:02,184 - mmseg - INFO - Iter [8150/40000]	lr: 4.778e-05, eta: 2:22:37, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1809, decode.acc_seg: 86.3040, loss: 0.1809
2022-11-29 01:42:15,038 - mmseg - INFO - Iter [8200/40000]	lr: 4.770e-05, eta: 2:22:22, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1713, decode.acc_seg: 88.4368, loss: 0.1713
2022-11-29 01:42:27,843 - mmseg - INFO - Iter [8250/40000]	lr: 4.763e-05, eta: 2:22:06, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2706, decode.acc_seg: 84.2215, loss: 0.2706
2022-11-29 01:42:40,672 - mmseg - INFO - Iter [8300/40000]	lr: 4.755e-05, eta: 2:21:50, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1721, decode.acc_seg: 88.9378, loss: 0.1721
2022-11-29 01:42:53,509 - mmseg - INFO - Iter [8350/40000]	lr: 4.748e-05, eta: 2:21:34, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1112, decode.acc_seg: 92.4465, loss: 0.1112
2022-11-29 01:43:06,360 - mmseg - INFO - Iter [8400/40000]	lr: 4.740e-05, eta: 2:21:19, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1773, decode.acc_seg: 87.5814, loss: 0.1773
2022-11-29 01:43:19,204 - mmseg - INFO - Iter [8450/40000]	lr: 4.733e-05, eta: 2:21:03, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1329, decode.acc_seg: 90.6050, loss: 0.1329
2022-11-29 01:43:32,093 - mmseg - INFO - Iter [8500/40000]	lr: 4.725e-05, eta: 2:20:48, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1996, decode.acc_seg: 88.5704, loss: 0.1996
2022-11-29 01:43:44,966 - mmseg - INFO - Iter [8550/40000]	lr: 4.718e-05, eta: 2:20:32, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.3615, decode.acc_seg: 83.0771, loss: 0.3615
2022-11-29 01:43:57,842 - mmseg - INFO - Iter [8600/40000]	lr: 4.710e-05, eta: 2:20:17, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1969, decode.acc_seg: 89.7992, loss: 0.1969
2022-11-29 01:44:10,719 - mmseg - INFO - Iter [8650/40000]	lr: 4.703e-05, eta: 2:20:02, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2710, decode.acc_seg: 84.3698, loss: 0.2710
2022-11-29 01:44:23,680 - mmseg - INFO - Iter [8700/40000]	lr: 4.695e-05, eta: 2:19:47, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1494, decode.acc_seg: 89.7457, loss: 0.1494
2022-11-29 01:44:36,614 - mmseg - INFO - Iter [8750/40000]	lr: 4.688e-05, eta: 2:19:32, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1500, decode.acc_seg: 90.5188, loss: 0.1500
2022-11-29 01:44:49,524 - mmseg - INFO - Iter [8800/40000]	lr: 4.680e-05, eta: 2:19:17, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1882, decode.acc_seg: 86.5566, loss: 0.1882
2022-11-29 01:45:02,435 - mmseg - INFO - Iter [8850/40000]	lr: 4.673e-05, eta: 2:19:02, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1682, decode.acc_seg: 90.1853, loss: 0.1682
2022-11-29 01:45:15,321 - mmseg - INFO - Iter [8900/40000]	lr: 4.665e-05, eta: 2:18:46, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2136, decode.acc_seg: 87.8953, loss: 0.2136
2022-11-29 01:45:28,284 - mmseg - INFO - Iter [8950/40000]	lr: 4.658e-05, eta: 2:18:32, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2283, decode.acc_seg: 86.1114, loss: 0.2283
2022-11-29 01:45:41,240 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:45:41,240 - mmseg - INFO - Iter [9000/40000]	lr: 4.650e-05, eta: 2:18:17, time: 0.259, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1696, decode.acc_seg: 88.7263, loss: 0.1696
2022-11-29 01:45:54,077 - mmseg - INFO - Iter [9050/40000]	lr: 4.643e-05, eta: 2:18:01, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1774, decode.acc_seg: 87.3745, loss: 0.1774
2022-11-29 01:46:06,865 - mmseg - INFO - Iter [9100/40000]	lr: 4.635e-05, eta: 2:17:46, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2390, decode.acc_seg: 84.6589, loss: 0.2390
2022-11-29 01:46:19,597 - mmseg - INFO - Iter [9150/40000]	lr: 4.628e-05, eta: 2:17:31, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2556, decode.acc_seg: 84.8281, loss: 0.2556
2022-11-29 01:46:32,377 - mmseg - INFO - Iter [9200/40000]	lr: 4.620e-05, eta: 2:17:15, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1954, decode.acc_seg: 88.1151, loss: 0.1954
2022-11-29 01:46:45,189 - mmseg - INFO - Iter [9250/40000]	lr: 4.613e-05, eta: 2:17:00, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1473, decode.acc_seg: 91.7257, loss: 0.1473
2022-11-29 01:46:58,004 - mmseg - INFO - Iter [9300/40000]	lr: 4.605e-05, eta: 2:16:45, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1375, decode.acc_seg: 90.8718, loss: 0.1375
2022-11-29 01:47:10,817 - mmseg - INFO - Iter [9350/40000]	lr: 4.598e-05, eta: 2:16:30, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1743, decode.acc_seg: 92.1763, loss: 0.1743
2022-11-29 01:47:23,659 - mmseg - INFO - Iter [9400/40000]	lr: 4.590e-05, eta: 2:16:15, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1700, decode.acc_seg: 89.3745, loss: 0.1700
2022-11-29 01:47:36,487 - mmseg - INFO - Iter [9450/40000]	lr: 4.583e-05, eta: 2:15:59, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2283, decode.acc_seg: 86.1584, loss: 0.2283
2022-11-29 01:47:49,301 - mmseg - INFO - Iter [9500/40000]	lr: 4.575e-05, eta: 2:15:44, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2140, decode.acc_seg: 86.8364, loss: 0.2140
2022-11-29 01:48:02,145 - mmseg - INFO - Iter [9550/40000]	lr: 4.568e-05, eta: 2:15:29, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1981, decode.acc_seg: 88.9589, loss: 0.1981
2022-11-29 01:48:14,913 - mmseg - INFO - Iter [9600/40000]	lr: 4.560e-05, eta: 2:15:14, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2044, decode.acc_seg: 88.6357, loss: 0.2044
2022-11-29 01:48:27,687 - mmseg - INFO - Iter [9650/40000]	lr: 4.553e-05, eta: 2:14:59, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1808, decode.acc_seg: 86.8126, loss: 0.1808
2022-11-29 01:48:40,462 - mmseg - INFO - Iter [9700/40000]	lr: 4.545e-05, eta: 2:14:44, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1542, decode.acc_seg: 89.6297, loss: 0.1542
2022-11-29 01:48:53,233 - mmseg - INFO - Iter [9750/40000]	lr: 4.538e-05, eta: 2:14:29, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1164, decode.acc_seg: 93.0899, loss: 0.1164
2022-11-29 01:49:06,020 - mmseg - INFO - Iter [9800/40000]	lr: 4.530e-05, eta: 2:14:14, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1860, decode.acc_seg: 89.0478, loss: 0.1860
2022-11-29 01:49:18,788 - mmseg - INFO - Iter [9850/40000]	lr: 4.523e-05, eta: 2:13:59, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1731, decode.acc_seg: 89.6682, loss: 0.1731
2022-11-29 01:49:31,610 - mmseg - INFO - Iter [9900/40000]	lr: 4.515e-05, eta: 2:13:44, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1192, decode.acc_seg: 91.5713, loss: 0.1192
2022-11-29 01:49:44,482 - mmseg - INFO - Iter [9950/40000]	lr: 4.508e-05, eta: 2:13:29, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1088, decode.acc_seg: 92.9701, loss: 0.1088
2022-11-29 01:49:57,240 - mmseg - INFO - Saving checkpoint at 10000 iterations
2022-11-29 01:49:58,968 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:49:58,968 - mmseg - INFO - Iter [10000/40000]	lr: 4.500e-05, eta: 2:13:19, time: 0.290, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1497, decode.acc_seg: 88.3196, loss: 0.1497
2022-11-29 01:51:18,257 - mmseg - INFO - per class results:
2022-11-29 01:51:18,258 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 83.82 | 88.05 |
|  building  | 55.96 | 62.16 |
|  woodland  | 79.84 | 93.38 |
|   water    | 71.57 | 85.06 |
|    road    | 37.99 | 71.15 |
+------------+-------+-------+
2022-11-29 01:51:18,258 - mmseg - INFO - Summary:
2022-11-29 01:51:18,258 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 89.06 | 65.84 | 79.96 |
+-------+-------+-------+
2022-11-29 01:51:18,261 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:51:18,261 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8906, mIoU: 0.6584, mAcc: 0.7996, IoU.background: 0.8382, IoU.building: 0.5596, IoU.woodland: 0.7984, IoU.water: 0.7157, IoU.road: 0.3799, Acc.background: 0.8805, Acc.building: 0.6216, Acc.woodland: 0.9338, Acc.water: 0.8506, Acc.road: 0.7115
2022-11-29 01:51:31,079 - mmseg - INFO - Iter [10050/40000]	lr: 4.493e-05, eta: 2:17:01, time: 1.842, data_time: 1.591, memory: 5537, decode.loss_ce: 0.1999, decode.acc_seg: 88.6677, loss: 0.1999
2022-11-29 01:51:43,864 - mmseg - INFO - Iter [10100/40000]	lr: 4.485e-05, eta: 2:16:44, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1283, decode.acc_seg: 91.5412, loss: 0.1283
2022-11-29 01:51:56,664 - mmseg - INFO - Iter [10150/40000]	lr: 4.478e-05, eta: 2:16:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1869, decode.acc_seg: 90.7059, loss: 0.1869
2022-11-29 01:52:09,469 - mmseg - INFO - Iter [10200/40000]	lr: 4.470e-05, eta: 2:16:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2940, decode.acc_seg: 82.0712, loss: 0.2940
2022-11-29 01:52:22,282 - mmseg - INFO - Iter [10250/40000]	lr: 4.463e-05, eta: 2:15:55, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2317, decode.acc_seg: 86.4371, loss: 0.2317
2022-11-29 01:52:35,090 - mmseg - INFO - Iter [10300/40000]	lr: 4.455e-05, eta: 2:15:39, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1718, decode.acc_seg: 88.8645, loss: 0.1718
2022-11-29 01:52:47,899 - mmseg - INFO - Iter [10350/40000]	lr: 4.448e-05, eta: 2:15:22, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1977, decode.acc_seg: 88.3663, loss: 0.1977
2022-11-29 01:53:00,712 - mmseg - INFO - Iter [10400/40000]	lr: 4.440e-05, eta: 2:15:06, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1203, decode.acc_seg: 91.9102, loss: 0.1203
2022-11-29 01:53:13,526 - mmseg - INFO - Iter [10450/40000]	lr: 4.433e-05, eta: 2:14:50, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1251, decode.acc_seg: 92.2266, loss: 0.1251
2022-11-29 01:53:26,328 - mmseg - INFO - Iter [10500/40000]	lr: 4.425e-05, eta: 2:14:34, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1611, decode.acc_seg: 90.5759, loss: 0.1611
2022-11-29 01:53:39,173 - mmseg - INFO - Iter [10550/40000]	lr: 4.418e-05, eta: 2:14:18, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2535, decode.acc_seg: 85.1878, loss: 0.2535
2022-11-29 01:53:51,963 - mmseg - INFO - Iter [10600/40000]	lr: 4.410e-05, eta: 2:14:02, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1806, decode.acc_seg: 88.6169, loss: 0.1806
2022-11-29 01:54:04,745 - mmseg - INFO - Iter [10650/40000]	lr: 4.403e-05, eta: 2:13:46, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2241, decode.acc_seg: 85.7698, loss: 0.2241
2022-11-29 01:54:17,563 - mmseg - INFO - Iter [10700/40000]	lr: 4.395e-05, eta: 2:13:30, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1852, decode.acc_seg: 87.9651, loss: 0.1852
2022-11-29 01:54:30,432 - mmseg - INFO - Iter [10750/40000]	lr: 4.388e-05, eta: 2:13:14, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1773, decode.acc_seg: 89.5962, loss: 0.1773
2022-11-29 01:54:43,232 - mmseg - INFO - Iter [10800/40000]	lr: 4.380e-05, eta: 2:12:58, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1478, decode.acc_seg: 89.8284, loss: 0.1478
2022-11-29 01:54:56,049 - mmseg - INFO - Iter [10850/40000]	lr: 4.373e-05, eta: 2:12:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1710, decode.acc_seg: 88.1935, loss: 0.1710
2022-11-29 01:55:08,872 - mmseg - INFO - Iter [10900/40000]	lr: 4.365e-05, eta: 2:12:26, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1509, decode.acc_seg: 89.2495, loss: 0.1509
2022-11-29 01:55:21,701 - mmseg - INFO - Iter [10950/40000]	lr: 4.358e-05, eta: 2:12:10, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2801, decode.acc_seg: 83.8323, loss: 0.2801
2022-11-29 01:55:34,562 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:55:34,562 - mmseg - INFO - Iter [11000/40000]	lr: 4.350e-05, eta: 2:11:54, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2110, decode.acc_seg: 87.7934, loss: 0.2110
2022-11-29 01:55:47,380 - mmseg - INFO - Iter [11050/40000]	lr: 4.343e-05, eta: 2:11:38, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1308, decode.acc_seg: 91.9927, loss: 0.1308
2022-11-29 01:56:00,139 - mmseg - INFO - Iter [11100/40000]	lr: 4.335e-05, eta: 2:11:23, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2198, decode.acc_seg: 88.0938, loss: 0.2198
2022-11-29 01:56:12,871 - mmseg - INFO - Iter [11150/40000]	lr: 4.328e-05, eta: 2:11:07, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1644, decode.acc_seg: 89.2655, loss: 0.1644
2022-11-29 01:56:25,637 - mmseg - INFO - Iter [11200/40000]	lr: 4.320e-05, eta: 2:10:51, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1651, decode.acc_seg: 90.3556, loss: 0.1651
2022-11-29 01:56:38,382 - mmseg - INFO - Iter [11250/40000]	lr: 4.313e-05, eta: 2:10:35, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1702, decode.acc_seg: 89.3756, loss: 0.1702
2022-11-29 01:56:51,125 - mmseg - INFO - Iter [11300/40000]	lr: 4.305e-05, eta: 2:10:19, time: 0.255, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1729, decode.acc_seg: 89.2047, loss: 0.1729
2022-11-29 01:57:03,856 - mmseg - INFO - Iter [11350/40000]	lr: 4.298e-05, eta: 2:10:03, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2108, decode.acc_seg: 90.7632, loss: 0.2108
2022-11-29 01:57:16,586 - mmseg - INFO - Iter [11400/40000]	lr: 4.290e-05, eta: 2:09:47, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1696, decode.acc_seg: 89.8132, loss: 0.1696
2022-11-29 01:57:29,340 - mmseg - INFO - Iter [11450/40000]	lr: 4.283e-05, eta: 2:09:31, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1656, decode.acc_seg: 89.2158, loss: 0.1656
2022-11-29 01:57:42,157 - mmseg - INFO - Iter [11500/40000]	lr: 4.275e-05, eta: 2:09:16, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1974, decode.acc_seg: 87.9590, loss: 0.1974
2022-11-29 01:57:54,900 - mmseg - INFO - Iter [11550/40000]	lr: 4.268e-05, eta: 2:09:00, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1452, decode.acc_seg: 91.1233, loss: 0.1452
2022-11-29 01:58:07,628 - mmseg - INFO - Iter [11600/40000]	lr: 4.260e-05, eta: 2:08:44, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1560, decode.acc_seg: 90.0795, loss: 0.1560
2022-11-29 01:58:20,360 - mmseg - INFO - Iter [11650/40000]	lr: 4.253e-05, eta: 2:08:29, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1816, decode.acc_seg: 87.5750, loss: 0.1816
2022-11-29 01:58:33,105 - mmseg - INFO - Iter [11700/40000]	lr: 4.245e-05, eta: 2:08:13, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1321, decode.acc_seg: 91.5882, loss: 0.1321
2022-11-29 01:58:45,850 - mmseg - INFO - Iter [11750/40000]	lr: 4.238e-05, eta: 2:07:57, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1412, decode.acc_seg: 91.5051, loss: 0.1412
2022-11-29 01:58:58,705 - mmseg - INFO - Iter [11800/40000]	lr: 4.230e-05, eta: 2:07:42, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1467, decode.acc_seg: 91.2131, loss: 0.1467
2022-11-29 01:59:11,778 - mmseg - INFO - Iter [11850/40000]	lr: 4.223e-05, eta: 2:07:27, time: 0.261, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1240, decode.acc_seg: 90.4005, loss: 0.1240
2022-11-29 01:59:24,862 - mmseg - INFO - Iter [11900/40000]	lr: 4.215e-05, eta: 2:07:12, time: 0.262, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1606, decode.acc_seg: 89.4472, loss: 0.1606
2022-11-29 01:59:37,827 - mmseg - INFO - Iter [11950/40000]	lr: 4.208e-05, eta: 2:06:57, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2166, decode.acc_seg: 84.2677, loss: 0.2166
2022-11-29 01:59:50,628 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 01:59:50,628 - mmseg - INFO - Iter [12000/40000]	lr: 4.200e-05, eta: 2:06:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1401, decode.acc_seg: 91.1492, loss: 0.1401
2022-11-29 02:00:03,463 - mmseg - INFO - Iter [12050/40000]	lr: 4.193e-05, eta: 2:06:27, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1974, decode.acc_seg: 88.4116, loss: 0.1974
2022-11-29 02:00:16,278 - mmseg - INFO - Iter [12100/40000]	lr: 4.185e-05, eta: 2:06:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1717, decode.acc_seg: 89.9937, loss: 0.1717
2022-11-29 02:00:29,150 - mmseg - INFO - Iter [12150/40000]	lr: 4.178e-05, eta: 2:05:56, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1463, decode.acc_seg: 91.7067, loss: 0.1463
2022-11-29 02:00:41,995 - mmseg - INFO - Iter [12200/40000]	lr: 4.170e-05, eta: 2:05:41, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2222, decode.acc_seg: 85.0509, loss: 0.2222
2022-11-29 02:00:54,807 - mmseg - INFO - Iter [12250/40000]	lr: 4.163e-05, eta: 2:05:26, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1298, decode.acc_seg: 92.5845, loss: 0.1298
2022-11-29 02:01:07,668 - mmseg - INFO - Iter [12300/40000]	lr: 4.155e-05, eta: 2:05:11, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1504, decode.acc_seg: 89.0561, loss: 0.1504
2022-11-29 02:01:20,478 - mmseg - INFO - Iter [12350/40000]	lr: 4.148e-05, eta: 2:04:55, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1870, decode.acc_seg: 88.1415, loss: 0.1870
2022-11-29 02:01:33,329 - mmseg - INFO - Iter [12400/40000]	lr: 4.140e-05, eta: 2:04:40, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1791, decode.acc_seg: 88.6642, loss: 0.1791
2022-11-29 02:01:46,238 - mmseg - INFO - Iter [12450/40000]	lr: 4.133e-05, eta: 2:04:25, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0968, decode.acc_seg: 94.2079, loss: 0.0968
2022-11-29 02:01:59,073 - mmseg - INFO - Iter [12500/40000]	lr: 4.125e-05, eta: 2:04:10, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1465, decode.acc_seg: 90.2624, loss: 0.1465
2022-11-29 02:02:11,899 - mmseg - INFO - Iter [12550/40000]	lr: 4.118e-05, eta: 2:03:55, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1301, decode.acc_seg: 92.2127, loss: 0.1301
2022-11-29 02:02:24,745 - mmseg - INFO - Iter [12600/40000]	lr: 4.110e-05, eta: 2:03:40, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1808, decode.acc_seg: 89.2924, loss: 0.1808
2022-11-29 02:02:37,598 - mmseg - INFO - Iter [12650/40000]	lr: 4.103e-05, eta: 2:03:25, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1393, decode.acc_seg: 91.7508, loss: 0.1393
2022-11-29 02:02:50,436 - mmseg - INFO - Iter [12700/40000]	lr: 4.095e-05, eta: 2:03:10, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1793, decode.acc_seg: 85.9146, loss: 0.1793
2022-11-29 02:03:03,288 - mmseg - INFO - Iter [12750/40000]	lr: 4.088e-05, eta: 2:02:55, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.3294, decode.acc_seg: 85.3967, loss: 0.3294
2022-11-29 02:03:16,137 - mmseg - INFO - Iter [12800/40000]	lr: 4.080e-05, eta: 2:02:40, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2172, decode.acc_seg: 84.3231, loss: 0.2172
2022-11-29 02:03:29,000 - mmseg - INFO - Iter [12850/40000]	lr: 4.073e-05, eta: 2:02:25, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1460, decode.acc_seg: 89.2702, loss: 0.1460
2022-11-29 02:03:41,863 - mmseg - INFO - Iter [12900/40000]	lr: 4.065e-05, eta: 2:02:10, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2557, decode.acc_seg: 85.3481, loss: 0.2557
2022-11-29 02:03:54,708 - mmseg - INFO - Iter [12950/40000]	lr: 4.058e-05, eta: 2:01:55, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1782, decode.acc_seg: 89.7827, loss: 0.1782
2022-11-29 02:04:07,532 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:04:07,532 - mmseg - INFO - Iter [13000/40000]	lr: 4.050e-05, eta: 2:01:40, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1512, decode.acc_seg: 89.2394, loss: 0.1512
2022-11-29 02:04:20,387 - mmseg - INFO - Iter [13050/40000]	lr: 4.043e-05, eta: 2:01:25, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1230, decode.acc_seg: 89.2642, loss: 0.1230
2022-11-29 02:04:33,310 - mmseg - INFO - Iter [13100/40000]	lr: 4.035e-05, eta: 2:01:10, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2513, decode.acc_seg: 84.8176, loss: 0.2513
2022-11-29 02:04:46,152 - mmseg - INFO - Iter [13150/40000]	lr: 4.028e-05, eta: 2:00:56, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1794, decode.acc_seg: 89.7153, loss: 0.1794
2022-11-29 02:04:58,966 - mmseg - INFO - Iter [13200/40000]	lr: 4.020e-05, eta: 2:00:41, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1618, decode.acc_seg: 89.9993, loss: 0.1618
2022-11-29 02:05:11,790 - mmseg - INFO - Iter [13250/40000]	lr: 4.013e-05, eta: 2:00:26, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1463, decode.acc_seg: 90.8189, loss: 0.1463
2022-11-29 02:05:24,585 - mmseg - INFO - Iter [13300/40000]	lr: 4.005e-05, eta: 2:00:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1912, decode.acc_seg: 90.1133, loss: 0.1912
2022-11-29 02:05:37,420 - mmseg - INFO - Iter [13350/40000]	lr: 3.998e-05, eta: 1:59:56, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2163, decode.acc_seg: 86.9514, loss: 0.2163
2022-11-29 02:05:50,312 - mmseg - INFO - Iter [13400/40000]	lr: 3.990e-05, eta: 1:59:41, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1813, decode.acc_seg: 89.1090, loss: 0.1813
2022-11-29 02:06:03,097 - mmseg - INFO - Iter [13450/40000]	lr: 3.983e-05, eta: 1:59:26, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1547, decode.acc_seg: 89.3180, loss: 0.1547
2022-11-29 02:06:15,835 - mmseg - INFO - Iter [13500/40000]	lr: 3.975e-05, eta: 1:59:11, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1890, decode.acc_seg: 87.3591, loss: 0.1890
2022-11-29 02:06:28,639 - mmseg - INFO - Iter [13550/40000]	lr: 3.968e-05, eta: 1:58:57, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1075, decode.acc_seg: 92.3309, loss: 0.1075
2022-11-29 02:06:41,404 - mmseg - INFO - Iter [13600/40000]	lr: 3.960e-05, eta: 1:58:42, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1567, decode.acc_seg: 90.5271, loss: 0.1567
2022-11-29 02:06:54,181 - mmseg - INFO - Iter [13650/40000]	lr: 3.953e-05, eta: 1:58:27, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1710, decode.acc_seg: 87.5977, loss: 0.1710
2022-11-29 02:07:06,947 - mmseg - INFO - Iter [13700/40000]	lr: 3.945e-05, eta: 1:58:12, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2903, decode.acc_seg: 86.9508, loss: 0.2903
2022-11-29 02:07:19,712 - mmseg - INFO - Iter [13750/40000]	lr: 3.938e-05, eta: 1:57:57, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2875, decode.acc_seg: 83.3667, loss: 0.2875
2022-11-29 02:07:32,480 - mmseg - INFO - Iter [13800/40000]	lr: 3.930e-05, eta: 1:57:42, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1947, decode.acc_seg: 88.6284, loss: 0.1947
2022-11-29 02:07:45,244 - mmseg - INFO - Iter [13850/40000]	lr: 3.923e-05, eta: 1:57:27, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1785, decode.acc_seg: 89.7120, loss: 0.1785
2022-11-29 02:07:58,017 - mmseg - INFO - Iter [13900/40000]	lr: 3.915e-05, eta: 1:57:13, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1439, decode.acc_seg: 91.5068, loss: 0.1439
2022-11-29 02:08:10,784 - mmseg - INFO - Iter [13950/40000]	lr: 3.908e-05, eta: 1:56:58, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1437, decode.acc_seg: 90.1664, loss: 0.1437
2022-11-29 02:08:23,557 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:08:23,557 - mmseg - INFO - Iter [14000/40000]	lr: 3.900e-05, eta: 1:56:43, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2196, decode.acc_seg: 88.2115, loss: 0.2196
2022-11-29 02:08:36,309 - mmseg - INFO - Iter [14050/40000]	lr: 3.893e-05, eta: 1:56:28, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1656, decode.acc_seg: 91.3607, loss: 0.1656
2022-11-29 02:08:49,073 - mmseg - INFO - Iter [14100/40000]	lr: 3.885e-05, eta: 1:56:13, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1310, decode.acc_seg: 91.7668, loss: 0.1310
2022-11-29 02:09:01,839 - mmseg - INFO - Iter [14150/40000]	lr: 3.878e-05, eta: 1:55:59, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1472, decode.acc_seg: 90.1740, loss: 0.1472
2022-11-29 02:09:14,607 - mmseg - INFO - Iter [14200/40000]	lr: 3.870e-05, eta: 1:55:44, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2105, decode.acc_seg: 86.4141, loss: 0.2105
2022-11-29 02:09:27,420 - mmseg - INFO - Iter [14250/40000]	lr: 3.863e-05, eta: 1:55:29, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1174, decode.acc_seg: 92.5499, loss: 0.1174
2022-11-29 02:09:40,191 - mmseg - INFO - Iter [14300/40000]	lr: 3.855e-05, eta: 1:55:15, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0893, decode.acc_seg: 95.3961, loss: 0.0893
2022-11-29 02:09:53,032 - mmseg - INFO - Iter [14350/40000]	lr: 3.848e-05, eta: 1:55:00, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1728, decode.acc_seg: 90.1123, loss: 0.1728
2022-11-29 02:10:05,871 - mmseg - INFO - Iter [14400/40000]	lr: 3.840e-05, eta: 1:54:46, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2345, decode.acc_seg: 85.1409, loss: 0.2345
2022-11-29 02:10:19,964 - mmseg - INFO - Iter [14450/40000]	lr: 3.833e-05, eta: 1:54:33, time: 0.282, data_time: 0.008, memory: 5537, decode.loss_ce: 0.1402, decode.acc_seg: 89.6789, loss: 0.1402
2022-11-29 02:10:33,031 - mmseg - INFO - Iter [14500/40000]	lr: 3.825e-05, eta: 1:54:19, time: 0.261, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1578, decode.acc_seg: 91.6095, loss: 0.1578
2022-11-29 02:10:45,877 - mmseg - INFO - Iter [14550/40000]	lr: 3.818e-05, eta: 1:54:05, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1139, decode.acc_seg: 90.2800, loss: 0.1139
2022-11-29 02:10:58,684 - mmseg - INFO - Iter [14600/40000]	lr: 3.810e-05, eta: 1:53:50, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1937, decode.acc_seg: 89.7823, loss: 0.1937
2022-11-29 02:11:11,445 - mmseg - INFO - Iter [14650/40000]	lr: 3.803e-05, eta: 1:53:35, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1158, decode.acc_seg: 92.5354, loss: 0.1158
2022-11-29 02:11:24,241 - mmseg - INFO - Iter [14700/40000]	lr: 3.795e-05, eta: 1:53:21, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1944, decode.acc_seg: 86.9723, loss: 0.1944
2022-11-29 02:11:36,998 - mmseg - INFO - Iter [14750/40000]	lr: 3.788e-05, eta: 1:53:06, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1592, decode.acc_seg: 90.9197, loss: 0.1592
2022-11-29 02:11:49,779 - mmseg - INFO - Iter [14800/40000]	lr: 3.780e-05, eta: 1:52:52, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1107, decode.acc_seg: 92.9037, loss: 0.1107
2022-11-29 02:12:02,526 - mmseg - INFO - Iter [14850/40000]	lr: 3.773e-05, eta: 1:52:37, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1464, decode.acc_seg: 91.1311, loss: 0.1464
2022-11-29 02:12:15,256 - mmseg - INFO - Iter [14900/40000]	lr: 3.765e-05, eta: 1:52:23, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1309, decode.acc_seg: 91.9360, loss: 0.1309
2022-11-29 02:12:30,185 - mmseg - INFO - Iter [14950/40000]	lr: 3.758e-05, eta: 1:52:12, time: 0.299, data_time: 0.047, memory: 5537, decode.loss_ce: 0.1224, decode.acc_seg: 90.3388, loss: 0.1224
2022-11-29 02:12:42,937 - mmseg - INFO - Saving checkpoint at 15000 iterations
2022-11-29 02:12:46,132 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:12:46,133 - mmseg - INFO - Iter [15000/40000]	lr: 3.750e-05, eta: 1:52:02, time: 0.319, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1676, decode.acc_seg: 91.0863, loss: 0.1676
2022-11-29 02:14:04,918 - mmseg - INFO - per class results:
2022-11-29 02:14:04,919 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 79.54 | 84.96 |
|  building  | 56.43 |  89.7 |
|  woodland  | 78.12 | 82.35 |
|   water    | 40.35 |  96.7 |
|    road    | 47.44 | 70.35 |
+------------+-------+-------+
2022-11-29 02:14:04,919 - mmseg - INFO - Summary:
2022-11-29 02:14:04,919 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 84.65 | 60.38 | 84.81 |
+-------+-------+-------+
2022-11-29 02:14:04,922 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:14:04,922 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8465, mIoU: 0.6038, mAcc: 0.8481, IoU.background: 0.7954, IoU.building: 0.5643, IoU.woodland: 0.7812, IoU.water: 0.4035, IoU.road: 0.4744, Acc.background: 0.8496, Acc.building: 0.8970, Acc.woodland: 0.8235, Acc.water: 0.9670, Acc.road: 0.7035
2022-11-29 02:14:17,738 - mmseg - INFO - Iter [15050/40000]	lr: 3.743e-05, eta: 1:53:58, time: 1.832, data_time: 1.581, memory: 5537, decode.loss_ce: 0.1473, decode.acc_seg: 91.5354, loss: 0.1473
2022-11-29 02:14:30,589 - mmseg - INFO - Iter [15100/40000]	lr: 3.735e-05, eta: 1:53:43, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1095, decode.acc_seg: 91.5839, loss: 0.1095
2022-11-29 02:14:43,409 - mmseg - INFO - Iter [15150/40000]	lr: 3.728e-05, eta: 1:53:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1573, decode.acc_seg: 88.6820, loss: 0.1573
2022-11-29 02:14:56,199 - mmseg - INFO - Iter [15200/40000]	lr: 3.720e-05, eta: 1:53:13, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1670, decode.acc_seg: 88.2119, loss: 0.1670
2022-11-29 02:15:09,029 - mmseg - INFO - Iter [15250/40000]	lr: 3.713e-05, eta: 1:52:58, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1178, decode.acc_seg: 91.3186, loss: 0.1178
2022-11-29 02:15:21,871 - mmseg - INFO - Iter [15300/40000]	lr: 3.705e-05, eta: 1:52:43, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1200, decode.acc_seg: 92.9781, loss: 0.1200
2022-11-29 02:15:34,715 - mmseg - INFO - Iter [15350/40000]	lr: 3.698e-05, eta: 1:52:28, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1262, decode.acc_seg: 92.5342, loss: 0.1262
2022-11-29 02:15:47,517 - mmseg - INFO - Iter [15400/40000]	lr: 3.690e-05, eta: 1:52:13, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1997, decode.acc_seg: 87.4574, loss: 0.1997
2022-11-29 02:16:00,350 - mmseg - INFO - Iter [15450/40000]	lr: 3.683e-05, eta: 1:51:58, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1382, decode.acc_seg: 90.8680, loss: 0.1382
2022-11-29 02:16:13,153 - mmseg - INFO - Iter [15500/40000]	lr: 3.675e-05, eta: 1:51:43, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1602, decode.acc_seg: 90.4515, loss: 0.1602
2022-11-29 02:16:25,966 - mmseg - INFO - Iter [15550/40000]	lr: 3.668e-05, eta: 1:51:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1790, decode.acc_seg: 88.3641, loss: 0.1790
2022-11-29 02:16:38,755 - mmseg - INFO - Iter [15600/40000]	lr: 3.660e-05, eta: 1:51:12, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1499, decode.acc_seg: 90.5406, loss: 0.1499
2022-11-29 02:16:51,533 - mmseg - INFO - Iter [15650/40000]	lr: 3.653e-05, eta: 1:50:57, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1607, decode.acc_seg: 89.7175, loss: 0.1607
2022-11-29 02:17:04,325 - mmseg - INFO - Iter [15700/40000]	lr: 3.645e-05, eta: 1:50:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1225, decode.acc_seg: 90.8365, loss: 0.1225
2022-11-29 02:17:17,104 - mmseg - INFO - Iter [15750/40000]	lr: 3.638e-05, eta: 1:50:27, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1769, decode.acc_seg: 88.6220, loss: 0.1769
2022-11-29 02:17:29,902 - mmseg - INFO - Iter [15800/40000]	lr: 3.630e-05, eta: 1:50:12, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1107, decode.acc_seg: 92.3625, loss: 0.1107
2022-11-29 02:17:42,714 - mmseg - INFO - Iter [15850/40000]	lr: 3.623e-05, eta: 1:49:57, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1513, decode.acc_seg: 90.4743, loss: 0.1513
2022-11-29 02:17:55,549 - mmseg - INFO - Iter [15900/40000]	lr: 3.615e-05, eta: 1:49:42, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1235, decode.acc_seg: 91.5230, loss: 0.1235
2022-11-29 02:18:08,300 - mmseg - INFO - Iter [15950/40000]	lr: 3.608e-05, eta: 1:49:27, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1053, decode.acc_seg: 92.5416, loss: 0.1053
2022-11-29 02:18:21,087 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:18:21,087 - mmseg - INFO - Iter [16000/40000]	lr: 3.600e-05, eta: 1:49:12, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0943, decode.acc_seg: 94.6530, loss: 0.0943
2022-11-29 02:18:33,936 - mmseg - INFO - Iter [16050/40000]	lr: 3.593e-05, eta: 1:48:58, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1037, decode.acc_seg: 92.5613, loss: 0.1037
2022-11-29 02:18:46,718 - mmseg - INFO - Iter [16100/40000]	lr: 3.585e-05, eta: 1:48:43, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1560, decode.acc_seg: 90.3100, loss: 0.1560
2022-11-29 02:18:59,555 - mmseg - INFO - Iter [16150/40000]	lr: 3.578e-05, eta: 1:48:28, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2000, decode.acc_seg: 88.8771, loss: 0.2000
2022-11-29 02:19:12,333 - mmseg - INFO - Iter [16200/40000]	lr: 3.570e-05, eta: 1:48:13, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1086, decode.acc_seg: 93.0086, loss: 0.1086
2022-11-29 02:19:25,123 - mmseg - INFO - Iter [16250/40000]	lr: 3.563e-05, eta: 1:47:58, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1078, decode.acc_seg: 93.4492, loss: 0.1078
2022-11-29 02:19:38,042 - mmseg - INFO - Iter [16300/40000]	lr: 3.555e-05, eta: 1:47:43, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1218, decode.acc_seg: 92.2163, loss: 0.1218
2022-11-29 02:19:50,849 - mmseg - INFO - Iter [16350/40000]	lr: 3.548e-05, eta: 1:47:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1297, decode.acc_seg: 92.9235, loss: 0.1297
2022-11-29 02:20:03,703 - mmseg - INFO - Iter [16400/40000]	lr: 3.540e-05, eta: 1:47:14, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1116, decode.acc_seg: 93.4641, loss: 0.1116
2022-11-29 02:20:16,572 - mmseg - INFO - Iter [16450/40000]	lr: 3.533e-05, eta: 1:46:59, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1537, decode.acc_seg: 91.3157, loss: 0.1537
2022-11-29 02:20:29,440 - mmseg - INFO - Iter [16500/40000]	lr: 3.525e-05, eta: 1:46:44, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2128, decode.acc_seg: 90.0648, loss: 0.2128
2022-11-29 02:20:42,292 - mmseg - INFO - Iter [16550/40000]	lr: 3.518e-05, eta: 1:46:30, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1316, decode.acc_seg: 92.6465, loss: 0.1316
2022-11-29 02:20:55,103 - mmseg - INFO - Iter [16600/40000]	lr: 3.510e-05, eta: 1:46:15, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1291, decode.acc_seg: 91.8298, loss: 0.1291
2022-11-29 02:21:07,912 - mmseg - INFO - Iter [16650/40000]	lr: 3.503e-05, eta: 1:46:00, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1414, decode.acc_seg: 91.3722, loss: 0.1414
2022-11-29 02:21:20,712 - mmseg - INFO - Iter [16700/40000]	lr: 3.495e-05, eta: 1:45:45, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1216, decode.acc_seg: 91.2849, loss: 0.1216
2022-11-29 02:21:33,536 - mmseg - INFO - Iter [16750/40000]	lr: 3.488e-05, eta: 1:45:31, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1089, decode.acc_seg: 91.7532, loss: 0.1089
2022-11-29 02:21:46,349 - mmseg - INFO - Iter [16800/40000]	lr: 3.480e-05, eta: 1:45:16, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1425, decode.acc_seg: 90.8321, loss: 0.1425
2022-11-29 02:21:59,145 - mmseg - INFO - Iter [16850/40000]	lr: 3.473e-05, eta: 1:45:01, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1188, decode.acc_seg: 93.2819, loss: 0.1188
2022-11-29 02:22:11,944 - mmseg - INFO - Iter [16900/40000]	lr: 3.465e-05, eta: 1:44:46, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1153, decode.acc_seg: 92.3904, loss: 0.1153
2022-11-29 02:22:24,741 - mmseg - INFO - Iter [16950/40000]	lr: 3.458e-05, eta: 1:44:32, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1374, decode.acc_seg: 90.7547, loss: 0.1374
2022-11-29 02:22:37,588 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:22:37,588 - mmseg - INFO - Iter [17000/40000]	lr: 3.450e-05, eta: 1:44:17, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0871, decode.acc_seg: 94.3240, loss: 0.0871
2022-11-29 02:22:50,374 - mmseg - INFO - Iter [17050/40000]	lr: 3.443e-05, eta: 1:44:02, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1509, decode.acc_seg: 90.0893, loss: 0.1509
2022-11-29 02:23:03,148 - mmseg - INFO - Iter [17100/40000]	lr: 3.435e-05, eta: 1:43:48, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1585, decode.acc_seg: 90.4644, loss: 0.1585
2022-11-29 02:23:15,948 - mmseg - INFO - Iter [17150/40000]	lr: 3.428e-05, eta: 1:43:33, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1906, decode.acc_seg: 90.7403, loss: 0.1906
2022-11-29 02:23:28,703 - mmseg - INFO - Iter [17200/40000]	lr: 3.420e-05, eta: 1:43:18, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1584, decode.acc_seg: 88.4950, loss: 0.1584
2022-11-29 02:23:41,468 - mmseg - INFO - Iter [17250/40000]	lr: 3.413e-05, eta: 1:43:04, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0817, decode.acc_seg: 94.4929, loss: 0.0817
2022-11-29 02:23:54,220 - mmseg - INFO - Iter [17300/40000]	lr: 3.405e-05, eta: 1:42:49, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1228, decode.acc_seg: 93.1378, loss: 0.1228
2022-11-29 02:24:06,981 - mmseg - INFO - Iter [17350/40000]	lr: 3.398e-05, eta: 1:42:34, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1871, decode.acc_seg: 88.5619, loss: 0.1871
2022-11-29 02:24:19,748 - mmseg - INFO - Iter [17400/40000]	lr: 3.390e-05, eta: 1:42:20, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1196, decode.acc_seg: 93.3316, loss: 0.1196
2022-11-29 02:24:32,603 - mmseg - INFO - Iter [17450/40000]	lr: 3.383e-05, eta: 1:42:05, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1114, decode.acc_seg: 93.0029, loss: 0.1114
2022-11-29 02:24:45,442 - mmseg - INFO - Iter [17500/40000]	lr: 3.375e-05, eta: 1:41:50, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1555, decode.acc_seg: 90.6691, loss: 0.1555
2022-11-29 02:24:58,250 - mmseg - INFO - Iter [17550/40000]	lr: 3.368e-05, eta: 1:41:36, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1418, decode.acc_seg: 90.5038, loss: 0.1418
2022-11-29 02:25:11,082 - mmseg - INFO - Iter [17600/40000]	lr: 3.360e-05, eta: 1:41:21, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1533, decode.acc_seg: 87.5223, loss: 0.1533
2022-11-29 02:25:23,941 - mmseg - INFO - Iter [17650/40000]	lr: 3.353e-05, eta: 1:41:07, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1481, decode.acc_seg: 92.3576, loss: 0.1481
2022-11-29 02:25:36,794 - mmseg - INFO - Iter [17700/40000]	lr: 3.345e-05, eta: 1:40:52, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1155, decode.acc_seg: 90.7711, loss: 0.1155
2022-11-29 02:25:49,610 - mmseg - INFO - Iter [17750/40000]	lr: 3.338e-05, eta: 1:40:38, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1604, decode.acc_seg: 89.0943, loss: 0.1604
2022-11-29 02:26:02,390 - mmseg - INFO - Iter [17800/40000]	lr: 3.330e-05, eta: 1:40:23, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1132, decode.acc_seg: 93.2882, loss: 0.1132
2022-11-29 02:26:15,133 - mmseg - INFO - Iter [17850/40000]	lr: 3.323e-05, eta: 1:40:09, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1223, decode.acc_seg: 92.5088, loss: 0.1223
2022-11-29 02:26:27,916 - mmseg - INFO - Iter [17900/40000]	lr: 3.315e-05, eta: 1:39:54, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1320, decode.acc_seg: 91.5273, loss: 0.1320
2022-11-29 02:26:40,818 - mmseg - INFO - Iter [17950/40000]	lr: 3.308e-05, eta: 1:39:40, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1287, decode.acc_seg: 92.0032, loss: 0.1287
2022-11-29 02:26:53,635 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:26:53,635 - mmseg - INFO - Iter [18000/40000]	lr: 3.300e-05, eta: 1:39:25, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1472, decode.acc_seg: 91.0831, loss: 0.1472
2022-11-29 02:27:06,446 - mmseg - INFO - Iter [18050/40000]	lr: 3.293e-05, eta: 1:39:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1255, decode.acc_seg: 91.6893, loss: 0.1255
2022-11-29 02:27:19,232 - mmseg - INFO - Iter [18100/40000]	lr: 3.285e-05, eta: 1:38:56, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1457, decode.acc_seg: 90.5817, loss: 0.1457
2022-11-29 02:27:32,057 - mmseg - INFO - Iter [18150/40000]	lr: 3.278e-05, eta: 1:38:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1552, decode.acc_seg: 90.5936, loss: 0.1552
2022-11-29 02:27:44,861 - mmseg - INFO - Iter [18200/40000]	lr: 3.270e-05, eta: 1:38:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1181, decode.acc_seg: 92.3904, loss: 0.1181
2022-11-29 02:27:57,661 - mmseg - INFO - Iter [18250/40000]	lr: 3.263e-05, eta: 1:38:13, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1166, decode.acc_seg: 92.9074, loss: 0.1166
2022-11-29 02:28:10,478 - mmseg - INFO - Iter [18300/40000]	lr: 3.255e-05, eta: 1:37:59, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1394, decode.acc_seg: 90.7235, loss: 0.1394
2022-11-29 02:28:23,295 - mmseg - INFO - Iter [18350/40000]	lr: 3.248e-05, eta: 1:37:44, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1468, decode.acc_seg: 90.7868, loss: 0.1468
2022-11-29 02:28:36,095 - mmseg - INFO - Iter [18400/40000]	lr: 3.240e-05, eta: 1:37:30, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1296, decode.acc_seg: 91.5685, loss: 0.1296
2022-11-29 02:28:48,910 - mmseg - INFO - Iter [18450/40000]	lr: 3.233e-05, eta: 1:37:15, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1211, decode.acc_seg: 91.5009, loss: 0.1211
2022-11-29 02:29:01,680 - mmseg - INFO - Iter [18500/40000]	lr: 3.225e-05, eta: 1:37:01, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2119, decode.acc_seg: 90.0924, loss: 0.2119
2022-11-29 02:29:14,424 - mmseg - INFO - Iter [18550/40000]	lr: 3.218e-05, eta: 1:36:47, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1592, decode.acc_seg: 90.9527, loss: 0.1592
2022-11-29 02:29:27,288 - mmseg - INFO - Iter [18600/40000]	lr: 3.210e-05, eta: 1:36:32, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1532, decode.acc_seg: 91.3438, loss: 0.1532
2022-11-29 02:29:40,168 - mmseg - INFO - Iter [18650/40000]	lr: 3.203e-05, eta: 1:36:18, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1028, decode.acc_seg: 93.5902, loss: 0.1028
2022-11-29 02:29:52,926 - mmseg - INFO - Iter [18700/40000]	lr: 3.195e-05, eta: 1:36:04, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1289, decode.acc_seg: 91.4941, loss: 0.1289
2022-11-29 02:30:05,787 - mmseg - INFO - Iter [18750/40000]	lr: 3.188e-05, eta: 1:35:49, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1629, decode.acc_seg: 89.1921, loss: 0.1629
2022-11-29 02:30:18,677 - mmseg - INFO - Iter [18800/40000]	lr: 3.180e-05, eta: 1:35:35, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1191, decode.acc_seg: 91.8907, loss: 0.1191
2022-11-29 02:30:31,540 - mmseg - INFO - Iter [18850/40000]	lr: 3.173e-05, eta: 1:35:21, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2275, decode.acc_seg: 85.3469, loss: 0.2275
2022-11-29 02:30:44,422 - mmseg - INFO - Iter [18900/40000]	lr: 3.165e-05, eta: 1:35:06, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1132, decode.acc_seg: 93.4074, loss: 0.1132
2022-11-29 02:30:57,227 - mmseg - INFO - Iter [18950/40000]	lr: 3.158e-05, eta: 1:34:52, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1079, decode.acc_seg: 92.8039, loss: 0.1079
2022-11-29 02:31:10,071 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:31:10,071 - mmseg - INFO - Iter [19000/40000]	lr: 3.150e-05, eta: 1:34:38, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1330, decode.acc_seg: 90.8314, loss: 0.1330
2022-11-29 02:31:22,905 - mmseg - INFO - Iter [19050/40000]	lr: 3.143e-05, eta: 1:34:24, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1148, decode.acc_seg: 90.9263, loss: 0.1148
2022-11-29 02:31:35,704 - mmseg - INFO - Iter [19100/40000]	lr: 3.135e-05, eta: 1:34:09, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2039, decode.acc_seg: 90.1144, loss: 0.2039
2022-11-29 02:31:48,507 - mmseg - INFO - Iter [19150/40000]	lr: 3.128e-05, eta: 1:33:55, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2177, decode.acc_seg: 88.3543, loss: 0.2177
2022-11-29 02:32:01,307 - mmseg - INFO - Iter [19200/40000]	lr: 3.120e-05, eta: 1:33:41, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1783, decode.acc_seg: 90.2873, loss: 0.1783
2022-11-29 02:32:14,100 - mmseg - INFO - Iter [19250/40000]	lr: 3.113e-05, eta: 1:33:26, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1601, decode.acc_seg: 87.0632, loss: 0.1601
2022-11-29 02:32:26,933 - mmseg - INFO - Iter [19300/40000]	lr: 3.105e-05, eta: 1:33:12, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1730, decode.acc_seg: 88.9700, loss: 0.1730
2022-11-29 02:32:39,742 - mmseg - INFO - Iter [19350/40000]	lr: 3.098e-05, eta: 1:32:58, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1240, decode.acc_seg: 91.4833, loss: 0.1240
2022-11-29 02:32:52,545 - mmseg - INFO - Iter [19400/40000]	lr: 3.090e-05, eta: 1:32:44, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0931, decode.acc_seg: 94.0112, loss: 0.0931
2022-11-29 02:33:05,372 - mmseg - INFO - Iter [19450/40000]	lr: 3.083e-05, eta: 1:32:29, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1087, decode.acc_seg: 91.9679, loss: 0.1087
2022-11-29 02:33:18,210 - mmseg - INFO - Iter [19500/40000]	lr: 3.075e-05, eta: 1:32:15, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1191, decode.acc_seg: 91.7854, loss: 0.1191
2022-11-29 02:33:31,037 - mmseg - INFO - Iter [19550/40000]	lr: 3.068e-05, eta: 1:32:01, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1273, decode.acc_seg: 92.5400, loss: 0.1273
2022-11-29 02:33:43,854 - mmseg - INFO - Iter [19600/40000]	lr: 3.060e-05, eta: 1:31:47, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1101, decode.acc_seg: 93.3279, loss: 0.1101
2022-11-29 02:33:56,639 - mmseg - INFO - Iter [19650/40000]	lr: 3.053e-05, eta: 1:31:33, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1115, decode.acc_seg: 94.0625, loss: 0.1115
2022-11-29 02:34:09,433 - mmseg - INFO - Iter [19700/40000]	lr: 3.045e-05, eta: 1:31:18, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1502, decode.acc_seg: 90.7739, loss: 0.1502
2022-11-29 02:34:22,251 - mmseg - INFO - Iter [19750/40000]	lr: 3.038e-05, eta: 1:31:04, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1332, decode.acc_seg: 90.2782, loss: 0.1332
2022-11-29 02:34:35,097 - mmseg - INFO - Iter [19800/40000]	lr: 3.030e-05, eta: 1:30:50, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1494, decode.acc_seg: 91.4534, loss: 0.1494
2022-11-29 02:34:47,898 - mmseg - INFO - Iter [19850/40000]	lr: 3.023e-05, eta: 1:30:36, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1796, decode.acc_seg: 90.3155, loss: 0.1796
2022-11-29 02:35:00,760 - mmseg - INFO - Iter [19900/40000]	lr: 3.015e-05, eta: 1:30:22, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1280, decode.acc_seg: 91.5787, loss: 0.1280
2022-11-29 02:35:13,539 - mmseg - INFO - Iter [19950/40000]	lr: 3.008e-05, eta: 1:30:08, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0952, decode.acc_seg: 94.4857, loss: 0.0952
2022-11-29 02:35:26,376 - mmseg - INFO - Saving checkpoint at 20000 iterations
2022-11-29 02:35:28,209 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:35:28,209 - mmseg - INFO - Iter [20000/40000]	lr: 3.000e-05, eta: 1:29:55, time: 0.293, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0837, decode.acc_seg: 94.8840, loss: 0.0837
2022-11-29 02:36:47,640 - mmseg - INFO - per class results:
2022-11-29 02:36:47,640 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 72.09 | 76.45 |
|  building  | 55.19 | 85.32 |
|  woodland  |  79.7 | 85.62 |
|   water    | 28.87 | 90.74 |
|    road    | 45.73 | 66.92 |
+------------+-------+-------+
2022-11-29 02:36:47,640 - mmseg - INFO - Summary:
2022-11-29 02:36:47,640 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 80.13 | 56.32 | 81.01 |
+-------+-------+-------+
2022-11-29 02:36:47,643 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:36:47,643 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8013, mIoU: 0.5632, mAcc: 0.8101, IoU.background: 0.7209, IoU.building: 0.5519, IoU.woodland: 0.7970, IoU.water: 0.2887, IoU.road: 0.4573, Acc.background: 0.7645, Acc.building: 0.8532, Acc.woodland: 0.8562, Acc.water: 0.9074, Acc.road: 0.6692
2022-11-29 02:37:00,490 - mmseg - INFO - Iter [20050/40000]	lr: 2.993e-05, eta: 1:31:00, time: 1.846, data_time: 1.594, memory: 5537, decode.loss_ce: 0.1290, decode.acc_seg: 91.5967, loss: 0.1290
2022-11-29 02:37:13,254 - mmseg - INFO - Iter [20100/40000]	lr: 2.985e-05, eta: 1:30:46, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1102, decode.acc_seg: 93.6845, loss: 0.1102
2022-11-29 02:37:26,038 - mmseg - INFO - Iter [20150/40000]	lr: 2.978e-05, eta: 1:30:31, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1184, decode.acc_seg: 92.7845, loss: 0.1184
2022-11-29 02:37:38,833 - mmseg - INFO - Iter [20200/40000]	lr: 2.970e-05, eta: 1:30:16, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2011, decode.acc_seg: 89.8982, loss: 0.2011
2022-11-29 02:37:51,619 - mmseg - INFO - Iter [20250/40000]	lr: 2.963e-05, eta: 1:30:02, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1198, decode.acc_seg: 92.3359, loss: 0.1198
2022-11-29 02:38:04,421 - mmseg - INFO - Iter [20300/40000]	lr: 2.955e-05, eta: 1:29:47, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1173, decode.acc_seg: 93.3057, loss: 0.1173
2022-11-29 02:38:17,234 - mmseg - INFO - Iter [20350/40000]	lr: 2.948e-05, eta: 1:29:33, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1211, decode.acc_seg: 92.5675, loss: 0.1211
2022-11-29 02:38:30,090 - mmseg - INFO - Iter [20400/40000]	lr: 2.940e-05, eta: 1:29:18, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1851, decode.acc_seg: 88.3527, loss: 0.1851
2022-11-29 02:38:42,965 - mmseg - INFO - Iter [20450/40000]	lr: 2.933e-05, eta: 1:29:04, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0998, decode.acc_seg: 93.7823, loss: 0.0998
2022-11-29 02:38:55,749 - mmseg - INFO - Iter [20500/40000]	lr: 2.925e-05, eta: 1:28:49, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1304, decode.acc_seg: 92.6375, loss: 0.1304
2022-11-29 02:39:08,557 - mmseg - INFO - Iter [20550/40000]	lr: 2.918e-05, eta: 1:28:35, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1253, decode.acc_seg: 92.7774, loss: 0.1253
2022-11-29 02:39:21,398 - mmseg - INFO - Iter [20600/40000]	lr: 2.910e-05, eta: 1:28:20, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1193, decode.acc_seg: 91.9040, loss: 0.1193
2022-11-29 02:39:34,264 - mmseg - INFO - Iter [20650/40000]	lr: 2.903e-05, eta: 1:28:06, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1211, decode.acc_seg: 92.2794, loss: 0.1211
2022-11-29 02:39:47,027 - mmseg - INFO - Iter [20700/40000]	lr: 2.895e-05, eta: 1:27:52, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1409, decode.acc_seg: 91.4625, loss: 0.1409
2022-11-29 02:39:59,805 - mmseg - INFO - Iter [20750/40000]	lr: 2.888e-05, eta: 1:27:37, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1176, decode.acc_seg: 92.5811, loss: 0.1176
2022-11-29 02:40:12,620 - mmseg - INFO - Iter [20800/40000]	lr: 2.880e-05, eta: 1:27:23, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1131, decode.acc_seg: 93.2293, loss: 0.1131
2022-11-29 02:40:25,424 - mmseg - INFO - Iter [20850/40000]	lr: 2.873e-05, eta: 1:27:08, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0896, decode.acc_seg: 95.1609, loss: 0.0896
2022-11-29 02:40:38,222 - mmseg - INFO - Iter [20900/40000]	lr: 2.865e-05, eta: 1:26:54, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1280, decode.acc_seg: 92.3220, loss: 0.1280
2022-11-29 02:40:51,028 - mmseg - INFO - Iter [20950/40000]	lr: 2.858e-05, eta: 1:26:39, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1071, decode.acc_seg: 93.4651, loss: 0.1071
2022-11-29 02:41:03,787 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:41:03,787 - mmseg - INFO - Iter [21000/40000]	lr: 2.850e-05, eta: 1:26:25, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2204, decode.acc_seg: 87.6734, loss: 0.2204
2022-11-29 02:41:16,600 - mmseg - INFO - Iter [21050/40000]	lr: 2.843e-05, eta: 1:26:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1090, decode.acc_seg: 92.3987, loss: 0.1090
2022-11-29 02:41:29,390 - mmseg - INFO - Iter [21100/40000]	lr: 2.835e-05, eta: 1:25:56, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0866, decode.acc_seg: 94.4812, loss: 0.0866
2022-11-29 02:41:42,195 - mmseg - INFO - Iter [21150/40000]	lr: 2.828e-05, eta: 1:25:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1586, decode.acc_seg: 90.6547, loss: 0.1586
2022-11-29 02:41:54,984 - mmseg - INFO - Iter [21200/40000]	lr: 2.820e-05, eta: 1:25:27, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1965, decode.acc_seg: 89.9084, loss: 0.1965
2022-11-29 02:42:07,787 - mmseg - INFO - Iter [21250/40000]	lr: 2.813e-05, eta: 1:25:13, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1631, decode.acc_seg: 90.5137, loss: 0.1631
2022-11-29 02:42:20,622 - mmseg - INFO - Iter [21300/40000]	lr: 2.805e-05, eta: 1:24:59, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1121, decode.acc_seg: 92.4134, loss: 0.1121
2022-11-29 02:42:33,437 - mmseg - INFO - Iter [21350/40000]	lr: 2.798e-05, eta: 1:24:44, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1837, decode.acc_seg: 92.0968, loss: 0.1837
2022-11-29 02:42:46,385 - mmseg - INFO - Iter [21400/40000]	lr: 2.790e-05, eta: 1:24:30, time: 0.259, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1376, decode.acc_seg: 91.3113, loss: 0.1376
2022-11-29 02:42:59,225 - mmseg - INFO - Iter [21450/40000]	lr: 2.783e-05, eta: 1:24:16, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1029, decode.acc_seg: 93.3851, loss: 0.1029
2022-11-29 02:43:12,043 - mmseg - INFO - Iter [21500/40000]	lr: 2.775e-05, eta: 1:24:01, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0935, decode.acc_seg: 94.5922, loss: 0.0935
2022-11-29 02:43:24,886 - mmseg - INFO - Iter [21550/40000]	lr: 2.768e-05, eta: 1:23:47, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1488, decode.acc_seg: 90.9361, loss: 0.1488
2022-11-29 02:43:37,695 - mmseg - INFO - Iter [21600/40000]	lr: 2.760e-05, eta: 1:23:33, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0971, decode.acc_seg: 93.7222, loss: 0.0971
2022-11-29 02:43:50,512 - mmseg - INFO - Iter [21650/40000]	lr: 2.753e-05, eta: 1:23:18, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1258, decode.acc_seg: 92.3772, loss: 0.1258
2022-11-29 02:44:03,334 - mmseg - INFO - Iter [21700/40000]	lr: 2.745e-05, eta: 1:23:04, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0960, decode.acc_seg: 93.9488, loss: 0.0960
2022-11-29 02:44:16,154 - mmseg - INFO - Iter [21750/40000]	lr: 2.738e-05, eta: 1:22:50, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2140, decode.acc_seg: 91.5791, loss: 0.2140
2022-11-29 02:44:28,980 - mmseg - INFO - Iter [21800/40000]	lr: 2.730e-05, eta: 1:22:36, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1799, decode.acc_seg: 88.9695, loss: 0.1799
2022-11-29 02:44:41,765 - mmseg - INFO - Iter [21850/40000]	lr: 2.723e-05, eta: 1:22:21, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0967, decode.acc_seg: 94.5593, loss: 0.0967
2022-11-29 02:44:54,580 - mmseg - INFO - Iter [21900/40000]	lr: 2.715e-05, eta: 1:22:07, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1836, decode.acc_seg: 90.2333, loss: 0.1836
2022-11-29 02:45:07,381 - mmseg - INFO - Iter [21950/40000]	lr: 2.708e-05, eta: 1:21:53, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1861, decode.acc_seg: 89.2132, loss: 0.1861
2022-11-29 02:45:20,191 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:45:20,191 - mmseg - INFO - Iter [22000/40000]	lr: 2.700e-05, eta: 1:21:39, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0978, decode.acc_seg: 94.0956, loss: 0.0978
2022-11-29 02:45:33,039 - mmseg - INFO - Iter [22050/40000]	lr: 2.693e-05, eta: 1:21:24, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1104, decode.acc_seg: 92.7626, loss: 0.1104
2022-11-29 02:45:45,818 - mmseg - INFO - Iter [22100/40000]	lr: 2.685e-05, eta: 1:21:10, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1497, decode.acc_seg: 91.0196, loss: 0.1497
2022-11-29 02:45:58,611 - mmseg - INFO - Iter [22150/40000]	lr: 2.678e-05, eta: 1:20:56, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1582, decode.acc_seg: 89.9035, loss: 0.1582
2022-11-29 02:46:11,375 - mmseg - INFO - Iter [22200/40000]	lr: 2.670e-05, eta: 1:20:41, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1197, decode.acc_seg: 92.3800, loss: 0.1197
2022-11-29 02:46:24,146 - mmseg - INFO - Iter [22250/40000]	lr: 2.663e-05, eta: 1:20:27, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1531, decode.acc_seg: 91.3450, loss: 0.1531
2022-11-29 02:46:36,939 - mmseg - INFO - Iter [22300/40000]	lr: 2.655e-05, eta: 1:20:13, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1068, decode.acc_seg: 92.3032, loss: 0.1068
2022-11-29 02:46:49,768 - mmseg - INFO - Iter [22350/40000]	lr: 2.648e-05, eta: 1:19:59, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1205, decode.acc_seg: 92.0593, loss: 0.1205
2022-11-29 02:47:02,552 - mmseg - INFO - Iter [22400/40000]	lr: 2.640e-05, eta: 1:19:45, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1315, decode.acc_seg: 91.1364, loss: 0.1315
2022-11-29 02:47:17,499 - mmseg - INFO - Iter [22450/40000]	lr: 2.633e-05, eta: 1:19:32, time: 0.299, data_time: 0.047, memory: 5537, decode.loss_ce: 0.0769, decode.acc_seg: 94.9473, loss: 0.0769
2022-11-29 02:47:30,397 - mmseg - INFO - Iter [22500/40000]	lr: 2.625e-05, eta: 1:19:18, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1100, decode.acc_seg: 92.8615, loss: 0.1100
2022-11-29 02:47:43,210 - mmseg - INFO - Iter [22550/40000]	lr: 2.618e-05, eta: 1:19:04, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1361, decode.acc_seg: 92.2111, loss: 0.1361
2022-11-29 02:47:56,089 - mmseg - INFO - Iter [22600/40000]	lr: 2.610e-05, eta: 1:18:50, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1276, decode.acc_seg: 91.1461, loss: 0.1276
2022-11-29 02:48:08,918 - mmseg - INFO - Iter [22650/40000]	lr: 2.603e-05, eta: 1:18:35, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0934, decode.acc_seg: 93.5389, loss: 0.0934
2022-11-29 02:48:21,701 - mmseg - INFO - Iter [22700/40000]	lr: 2.595e-05, eta: 1:18:21, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1329, decode.acc_seg: 91.3271, loss: 0.1329
2022-11-29 02:48:34,498 - mmseg - INFO - Iter [22750/40000]	lr: 2.588e-05, eta: 1:18:07, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1073, decode.acc_seg: 93.6970, loss: 0.1073
2022-11-29 02:48:47,309 - mmseg - INFO - Iter [22800/40000]	lr: 2.580e-05, eta: 1:17:53, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0933, decode.acc_seg: 94.2191, loss: 0.0933
2022-11-29 02:49:00,111 - mmseg - INFO - Iter [22850/40000]	lr: 2.573e-05, eta: 1:17:39, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0972, decode.acc_seg: 93.9920, loss: 0.0972
2022-11-29 02:49:12,920 - mmseg - INFO - Iter [22900/40000]	lr: 2.565e-05, eta: 1:17:24, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0993, decode.acc_seg: 93.0817, loss: 0.0993
2022-11-29 02:49:25,747 - mmseg - INFO - Iter [22950/40000]	lr: 2.558e-05, eta: 1:17:10, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.2359, decode.acc_seg: 89.0812, loss: 0.2359
2022-11-29 02:49:38,642 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:49:38,642 - mmseg - INFO - Iter [23000/40000]	lr: 2.550e-05, eta: 1:16:56, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1358, decode.acc_seg: 91.0820, loss: 0.1358
2022-11-29 02:49:51,459 - mmseg - INFO - Iter [23050/40000]	lr: 2.543e-05, eta: 1:16:42, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1319, decode.acc_seg: 90.1279, loss: 0.1319
2022-11-29 02:50:04,265 - mmseg - INFO - Iter [23100/40000]	lr: 2.535e-05, eta: 1:16:28, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1232, decode.acc_seg: 92.2505, loss: 0.1232
2022-11-29 02:50:17,063 - mmseg - INFO - Iter [23150/40000]	lr: 2.528e-05, eta: 1:16:14, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1334, decode.acc_seg: 92.2493, loss: 0.1334
2022-11-29 02:50:29,904 - mmseg - INFO - Iter [23200/40000]	lr: 2.520e-05, eta: 1:16:00, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1293, decode.acc_seg: 90.6657, loss: 0.1293
2022-11-29 02:50:42,716 - mmseg - INFO - Iter [23250/40000]	lr: 2.513e-05, eta: 1:15:46, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0925, decode.acc_seg: 94.2213, loss: 0.0925
2022-11-29 02:50:55,746 - mmseg - INFO - Iter [23300/40000]	lr: 2.505e-05, eta: 1:15:32, time: 0.261, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0881, decode.acc_seg: 93.2609, loss: 0.0881
2022-11-29 02:51:08,545 - mmseg - INFO - Iter [23350/40000]	lr: 2.498e-05, eta: 1:15:17, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1462, decode.acc_seg: 90.7533, loss: 0.1462
2022-11-29 02:51:21,338 - mmseg - INFO - Iter [23400/40000]	lr: 2.490e-05, eta: 1:15:03, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0979, decode.acc_seg: 94.5599, loss: 0.0979
2022-11-29 02:51:34,099 - mmseg - INFO - Iter [23450/40000]	lr: 2.483e-05, eta: 1:14:49, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1004, decode.acc_seg: 93.0965, loss: 0.1004
2022-11-29 02:51:46,923 - mmseg - INFO - Iter [23500/40000]	lr: 2.475e-05, eta: 1:14:35, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1239, decode.acc_seg: 92.5813, loss: 0.1239
2022-11-29 02:51:59,749 - mmseg - INFO - Iter [23550/40000]	lr: 2.468e-05, eta: 1:14:21, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1482, decode.acc_seg: 91.0137, loss: 0.1482
2022-11-29 02:52:12,594 - mmseg - INFO - Iter [23600/40000]	lr: 2.460e-05, eta: 1:14:07, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0839, decode.acc_seg: 95.0821, loss: 0.0839
2022-11-29 02:52:25,436 - mmseg - INFO - Iter [23650/40000]	lr: 2.453e-05, eta: 1:13:53, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1329, decode.acc_seg: 92.5873, loss: 0.1329
2022-11-29 02:52:38,300 - mmseg - INFO - Iter [23700/40000]	lr: 2.445e-05, eta: 1:13:39, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0984, decode.acc_seg: 93.5026, loss: 0.0984
2022-11-29 02:52:51,091 - mmseg - INFO - Iter [23750/40000]	lr: 2.438e-05, eta: 1:13:25, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1039, decode.acc_seg: 92.9345, loss: 0.1039
2022-11-29 02:53:03,893 - mmseg - INFO - Iter [23800/40000]	lr: 2.430e-05, eta: 1:13:11, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1436, decode.acc_seg: 91.3520, loss: 0.1436
2022-11-29 02:53:16,688 - mmseg - INFO - Iter [23850/40000]	lr: 2.423e-05, eta: 1:12:57, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0997, decode.acc_seg: 93.8899, loss: 0.0997
2022-11-29 02:53:29,499 - mmseg - INFO - Iter [23900/40000]	lr: 2.415e-05, eta: 1:12:43, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1033, decode.acc_seg: 91.8915, loss: 0.1033
2022-11-29 02:53:42,302 - mmseg - INFO - Iter [23950/40000]	lr: 2.408e-05, eta: 1:12:29, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1485, decode.acc_seg: 89.2739, loss: 0.1485
2022-11-29 02:53:55,166 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:53:55,166 - mmseg - INFO - Iter [24000/40000]	lr: 2.400e-05, eta: 1:12:15, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1478, decode.acc_seg: 90.7631, loss: 0.1478
2022-11-29 02:54:07,969 - mmseg - INFO - Iter [24050/40000]	lr: 2.393e-05, eta: 1:12:01, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1221, decode.acc_seg: 91.6807, loss: 0.1221
2022-11-29 02:54:20,794 - mmseg - INFO - Iter [24100/40000]	lr: 2.385e-05, eta: 1:11:47, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1258, decode.acc_seg: 92.8177, loss: 0.1258
2022-11-29 02:54:33,654 - mmseg - INFO - Iter [24150/40000]	lr: 2.378e-05, eta: 1:11:33, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0883, decode.acc_seg: 94.5647, loss: 0.0883
2022-11-29 02:54:46,484 - mmseg - INFO - Iter [24200/40000]	lr: 2.370e-05, eta: 1:11:19, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0934, decode.acc_seg: 94.6429, loss: 0.0934
2022-11-29 02:54:59,265 - mmseg - INFO - Iter [24250/40000]	lr: 2.363e-05, eta: 1:11:04, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1374, decode.acc_seg: 91.3645, loss: 0.1374
2022-11-29 02:55:12,174 - mmseg - INFO - Iter [24300/40000]	lr: 2.355e-05, eta: 1:10:51, time: 0.258, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0752, decode.acc_seg: 95.1322, loss: 0.0752
2022-11-29 02:55:25,027 - mmseg - INFO - Iter [24350/40000]	lr: 2.348e-05, eta: 1:10:37, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1263, decode.acc_seg: 92.3146, loss: 0.1263
2022-11-29 02:55:37,874 - mmseg - INFO - Iter [24400/40000]	lr: 2.340e-05, eta: 1:10:23, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0868, decode.acc_seg: 94.2032, loss: 0.0868
2022-11-29 02:55:50,682 - mmseg - INFO - Iter [24450/40000]	lr: 2.333e-05, eta: 1:10:09, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1313, decode.acc_seg: 90.4786, loss: 0.1313
2022-11-29 02:56:03,497 - mmseg - INFO - Iter [24500/40000]	lr: 2.325e-05, eta: 1:09:55, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1067, decode.acc_seg: 92.7910, loss: 0.1067
2022-11-29 02:56:16,351 - mmseg - INFO - Iter [24550/40000]	lr: 2.318e-05, eta: 1:09:41, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1192, decode.acc_seg: 93.2618, loss: 0.1192
2022-11-29 02:56:29,195 - mmseg - INFO - Iter [24600/40000]	lr: 2.310e-05, eta: 1:09:27, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1572, decode.acc_seg: 89.2687, loss: 0.1572
2022-11-29 02:56:42,051 - mmseg - INFO - Iter [24650/40000]	lr: 2.303e-05, eta: 1:09:13, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0996, decode.acc_seg: 93.4634, loss: 0.0996
2022-11-29 02:56:54,882 - mmseg - INFO - Iter [24700/40000]	lr: 2.295e-05, eta: 1:08:59, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1538, decode.acc_seg: 89.8137, loss: 0.1538
2022-11-29 02:57:07,704 - mmseg - INFO - Iter [24750/40000]	lr: 2.288e-05, eta: 1:08:45, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0918, decode.acc_seg: 94.1706, loss: 0.0918
2022-11-29 02:57:20,558 - mmseg - INFO - Iter [24800/40000]	lr: 2.280e-05, eta: 1:08:31, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1258, decode.acc_seg: 91.2759, loss: 0.1258
2022-11-29 02:57:33,325 - mmseg - INFO - Iter [24850/40000]	lr: 2.273e-05, eta: 1:08:17, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1331, decode.acc_seg: 91.6087, loss: 0.1331
2022-11-29 02:57:46,107 - mmseg - INFO - Iter [24900/40000]	lr: 2.265e-05, eta: 1:08:03, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1083, decode.acc_seg: 93.2970, loss: 0.1083
2022-11-29 02:57:58,887 - mmseg - INFO - Iter [24950/40000]	lr: 2.258e-05, eta: 1:07:49, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1110, decode.acc_seg: 92.7222, loss: 0.1110
2022-11-29 02:58:11,758 - mmseg - INFO - Saving checkpoint at 25000 iterations
2022-11-29 02:58:14,630 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:58:14,631 - mmseg - INFO - Iter [25000/40000]	lr: 2.250e-05, eta: 1:07:37, time: 0.315, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1188, decode.acc_seg: 92.4566, loss: 0.1188
2022-11-29 02:59:34,539 - mmseg - INFO - per class results:
2022-11-29 02:59:34,539 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 80.86 | 84.55 |
|  building  | 65.36 | 87.95 |
|  woodland  | 84.83 | 92.33 |
|   water    |  43.6 |  92.3 |
|    road    |  51.3 | 63.34 |
+------------+-------+-------+
2022-11-29 02:59:34,539 - mmseg - INFO - Summary:
2022-11-29 02:59:34,539 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 87.18 | 65.19 | 84.09 |
+-------+-------+-------+
2022-11-29 02:59:34,542 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 02:59:34,542 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8718, mIoU: 0.6519, mAcc: 0.8409, IoU.background: 0.8086, IoU.building: 0.6536, IoU.woodland: 0.8483, IoU.water: 0.4360, IoU.road: 0.5130, Acc.background: 0.8455, Acc.building: 0.8795, Acc.woodland: 0.9233, Acc.water: 0.9230, Acc.road: 0.6334
2022-11-29 02:59:47,585 - mmseg - INFO - Iter [25050/40000]	lr: 2.243e-05, eta: 1:08:11, time: 1.859, data_time: 1.604, memory: 5537, decode.loss_ce: 0.0806, decode.acc_seg: 93.9009, loss: 0.0806
2022-11-29 03:00:00,444 - mmseg - INFO - Iter [25100/40000]	lr: 2.235e-05, eta: 1:07:56, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1147, decode.acc_seg: 93.0387, loss: 0.1147
2022-11-29 03:00:13,321 - mmseg - INFO - Iter [25150/40000]	lr: 2.228e-05, eta: 1:07:42, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1218, decode.acc_seg: 92.1700, loss: 0.1218
2022-11-29 03:00:26,194 - mmseg - INFO - Iter [25200/40000]	lr: 2.220e-05, eta: 1:07:28, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0972, decode.acc_seg: 93.7082, loss: 0.0972
2022-11-29 03:00:39,046 - mmseg - INFO - Iter [25250/40000]	lr: 2.213e-05, eta: 1:07:14, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0844, decode.acc_seg: 94.9404, loss: 0.0844
2022-11-29 03:00:51,902 - mmseg - INFO - Iter [25300/40000]	lr: 2.205e-05, eta: 1:07:00, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1291, decode.acc_seg: 91.9817, loss: 0.1291
2022-11-29 03:01:04,741 - mmseg - INFO - Iter [25350/40000]	lr: 2.198e-05, eta: 1:06:46, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1137, decode.acc_seg: 92.7605, loss: 0.1137
2022-11-29 03:01:17,594 - mmseg - INFO - Iter [25400/40000]	lr: 2.190e-05, eta: 1:06:32, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1355, decode.acc_seg: 91.7436, loss: 0.1355
2022-11-29 03:01:30,407 - mmseg - INFO - Iter [25450/40000]	lr: 2.183e-05, eta: 1:06:17, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0961, decode.acc_seg: 93.8358, loss: 0.0961
2022-11-29 03:01:43,240 - mmseg - INFO - Iter [25500/40000]	lr: 2.175e-05, eta: 1:06:03, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1211, decode.acc_seg: 91.9531, loss: 0.1211
2022-11-29 03:01:56,065 - mmseg - INFO - Iter [25550/40000]	lr: 2.168e-05, eta: 1:05:49, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1287, decode.acc_seg: 94.2019, loss: 0.1287
2022-11-29 03:02:08,915 - mmseg - INFO - Iter [25600/40000]	lr: 2.160e-05, eta: 1:05:35, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1701, decode.acc_seg: 89.3527, loss: 0.1701
2022-11-29 03:02:21,737 - mmseg - INFO - Iter [25650/40000]	lr: 2.153e-05, eta: 1:05:21, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0978, decode.acc_seg: 93.7207, loss: 0.0978
2022-11-29 03:02:34,549 - mmseg - INFO - Iter [25700/40000]	lr: 2.145e-05, eta: 1:05:07, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1155, decode.acc_seg: 91.1572, loss: 0.1155
2022-11-29 03:02:47,352 - mmseg - INFO - Iter [25750/40000]	lr: 2.138e-05, eta: 1:04:53, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1373, decode.acc_seg: 90.6896, loss: 0.1373
2022-11-29 03:03:00,187 - mmseg - INFO - Iter [25800/40000]	lr: 2.130e-05, eta: 1:04:38, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1375, decode.acc_seg: 91.9679, loss: 0.1375
2022-11-29 03:03:13,080 - mmseg - INFO - Iter [25850/40000]	lr: 2.123e-05, eta: 1:04:24, time: 0.258, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1250, decode.acc_seg: 92.7654, loss: 0.1250
2022-11-29 03:03:25,841 - mmseg - INFO - Iter [25900/40000]	lr: 2.115e-05, eta: 1:04:10, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0909, decode.acc_seg: 93.7754, loss: 0.0909
2022-11-29 03:03:38,627 - mmseg - INFO - Iter [25950/40000]	lr: 2.108e-05, eta: 1:03:56, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1491, decode.acc_seg: 89.4287, loss: 0.1491
2022-11-29 03:03:51,396 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:03:51,396 - mmseg - INFO - Iter [26000/40000]	lr: 2.100e-05, eta: 1:03:42, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1196, decode.acc_seg: 92.6762, loss: 0.1196
2022-11-29 03:04:04,134 - mmseg - INFO - Iter [26050/40000]	lr: 2.093e-05, eta: 1:03:28, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1416, decode.acc_seg: 91.0400, loss: 0.1416
2022-11-29 03:04:16,860 - mmseg - INFO - Iter [26100/40000]	lr: 2.085e-05, eta: 1:03:14, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0826, decode.acc_seg: 93.9541, loss: 0.0826
2022-11-29 03:04:29,642 - mmseg - INFO - Iter [26150/40000]	lr: 2.078e-05, eta: 1:03:00, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0865, decode.acc_seg: 94.8097, loss: 0.0865
2022-11-29 03:04:42,451 - mmseg - INFO - Iter [26200/40000]	lr: 2.070e-05, eta: 1:02:45, time: 0.256, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0873, decode.acc_seg: 94.5869, loss: 0.0873
2022-11-29 03:04:55,208 - mmseg - INFO - Iter [26250/40000]	lr: 2.063e-05, eta: 1:02:31, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1505, decode.acc_seg: 92.7390, loss: 0.1505
2022-11-29 03:05:07,978 - mmseg - INFO - Iter [26300/40000]	lr: 2.055e-05, eta: 1:02:17, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1493, decode.acc_seg: 88.1731, loss: 0.1493
2022-11-29 03:05:20,788 - mmseg - INFO - Iter [26350/40000]	lr: 2.048e-05, eta: 1:02:03, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1841, decode.acc_seg: 90.5822, loss: 0.1841
2022-11-29 03:05:33,622 - mmseg - INFO - Iter [26400/40000]	lr: 2.040e-05, eta: 1:01:49, time: 0.257, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1242, decode.acc_seg: 91.7213, loss: 0.1242
2022-11-29 03:05:46,403 - mmseg - INFO - Iter [26450/40000]	lr: 2.033e-05, eta: 1:01:35, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1708, decode.acc_seg: 88.7015, loss: 0.1708
2022-11-29 03:05:59,182 - mmseg - INFO - Iter [26500/40000]	lr: 2.025e-05, eta: 1:01:21, time: 0.256, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1172, decode.acc_seg: 92.2002, loss: 0.1172
2022-11-29 03:06:11,882 - mmseg - INFO - Iter [26550/40000]	lr: 2.018e-05, eta: 1:01:07, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1034, decode.acc_seg: 94.1782, loss: 0.1034
2022-11-29 03:06:24,612 - mmseg - INFO - Iter [26600/40000]	lr: 2.010e-05, eta: 1:00:53, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1092, decode.acc_seg: 92.0563, loss: 0.1092
2022-11-29 03:06:37,259 - mmseg - INFO - Iter [26650/40000]	lr: 2.003e-05, eta: 1:00:39, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1265, decode.acc_seg: 91.7683, loss: 0.1265
2022-11-29 03:06:49,863 - mmseg - INFO - Iter [26700/40000]	lr: 1.995e-05, eta: 1:00:25, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1543, decode.acc_seg: 90.1509, loss: 0.1543
2022-11-29 03:07:02,455 - mmseg - INFO - Iter [26750/40000]	lr: 1.988e-05, eta: 1:00:10, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1367, decode.acc_seg: 91.8846, loss: 0.1367
2022-11-29 03:07:15,114 - mmseg - INFO - Iter [26800/40000]	lr: 1.980e-05, eta: 0:59:56, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1132, decode.acc_seg: 91.7264, loss: 0.1132
2022-11-29 03:07:27,713 - mmseg - INFO - Iter [26850/40000]	lr: 1.973e-05, eta: 0:59:42, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0986, decode.acc_seg: 94.0581, loss: 0.0986
2022-11-29 03:07:40,316 - mmseg - INFO - Iter [26900/40000]	lr: 1.965e-05, eta: 0:59:28, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1184, decode.acc_seg: 91.6777, loss: 0.1184
2022-11-29 03:07:52,919 - mmseg - INFO - Iter [26950/40000]	lr: 1.958e-05, eta: 0:59:14, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1476, decode.acc_seg: 90.9235, loss: 0.1476
2022-11-29 03:08:05,533 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:08:05,534 - mmseg - INFO - Iter [27000/40000]	lr: 1.950e-05, eta: 0:59:00, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1222, decode.acc_seg: 93.6719, loss: 0.1222
2022-11-29 03:08:18,093 - mmseg - INFO - Iter [27050/40000]	lr: 1.943e-05, eta: 0:58:46, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0962, decode.acc_seg: 92.5833, loss: 0.0962
2022-11-29 03:08:30,631 - mmseg - INFO - Iter [27100/40000]	lr: 1.935e-05, eta: 0:58:32, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0878, decode.acc_seg: 94.9541, loss: 0.0878
2022-11-29 03:08:43,182 - mmseg - INFO - Iter [27150/40000]	lr: 1.928e-05, eta: 0:58:17, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1094, decode.acc_seg: 92.8115, loss: 0.1094
2022-11-29 03:08:55,742 - mmseg - INFO - Iter [27200/40000]	lr: 1.920e-05, eta: 0:58:03, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0765, decode.acc_seg: 94.9600, loss: 0.0765
2022-11-29 03:09:08,279 - mmseg - INFO - Iter [27250/40000]	lr: 1.913e-05, eta: 0:57:49, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1187, decode.acc_seg: 93.3684, loss: 0.1187
2022-11-29 03:09:20,819 - mmseg - INFO - Iter [27300/40000]	lr: 1.905e-05, eta: 0:57:35, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1240, decode.acc_seg: 90.3753, loss: 0.1240
2022-11-29 03:09:33,376 - mmseg - INFO - Iter [27350/40000]	lr: 1.898e-05, eta: 0:57:21, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1410, decode.acc_seg: 91.6158, loss: 0.1410
2022-11-29 03:09:45,929 - mmseg - INFO - Iter [27400/40000]	lr: 1.890e-05, eta: 0:57:07, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1021, decode.acc_seg: 92.6582, loss: 0.1021
2022-11-29 03:09:58,499 - mmseg - INFO - Iter [27450/40000]	lr: 1.883e-05, eta: 0:56:53, time: 0.251, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1607, decode.acc_seg: 91.2428, loss: 0.1607
2022-11-29 03:10:11,082 - mmseg - INFO - Iter [27500/40000]	lr: 1.875e-05, eta: 0:56:39, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1119, decode.acc_seg: 93.0203, loss: 0.1119
2022-11-29 03:10:23,722 - mmseg - INFO - Iter [27550/40000]	lr: 1.868e-05, eta: 0:56:25, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1108, decode.acc_seg: 94.1612, loss: 0.1108
2022-11-29 03:10:36,374 - mmseg - INFO - Iter [27600/40000]	lr: 1.860e-05, eta: 0:56:11, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0959, decode.acc_seg: 93.4426, loss: 0.0959
2022-11-29 03:10:48,974 - mmseg - INFO - Iter [27650/40000]	lr: 1.853e-05, eta: 0:55:57, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0960, decode.acc_seg: 93.2350, loss: 0.0960
2022-11-29 03:11:01,542 - mmseg - INFO - Iter [27700/40000]	lr: 1.845e-05, eta: 0:55:43, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0878, decode.acc_seg: 93.7236, loss: 0.0878
2022-11-29 03:11:14,125 - mmseg - INFO - Iter [27750/40000]	lr: 1.838e-05, eta: 0:55:29, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1286, decode.acc_seg: 90.8258, loss: 0.1286
2022-11-29 03:11:26,837 - mmseg - INFO - Iter [27800/40000]	lr: 1.830e-05, eta: 0:55:15, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0962, decode.acc_seg: 93.7025, loss: 0.0962
2022-11-29 03:11:39,416 - mmseg - INFO - Iter [27850/40000]	lr: 1.823e-05, eta: 0:55:01, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1309, decode.acc_seg: 91.9813, loss: 0.1309
2022-11-29 03:11:52,017 - mmseg - INFO - Iter [27900/40000]	lr: 1.815e-05, eta: 0:54:47, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1330, decode.acc_seg: 91.9194, loss: 0.1330
2022-11-29 03:12:04,608 - mmseg - INFO - Iter [27950/40000]	lr: 1.808e-05, eta: 0:54:33, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0789, decode.acc_seg: 94.0997, loss: 0.0789
2022-11-29 03:12:17,192 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:12:17,193 - mmseg - INFO - Iter [28000/40000]	lr: 1.800e-05, eta: 0:54:19, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1208, decode.acc_seg: 92.3409, loss: 0.1208
2022-11-29 03:12:29,801 - mmseg - INFO - Iter [28050/40000]	lr: 1.793e-05, eta: 0:54:05, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0937, decode.acc_seg: 93.2946, loss: 0.0937
2022-11-29 03:12:42,373 - mmseg - INFO - Iter [28100/40000]	lr: 1.785e-05, eta: 0:53:51, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.2359, decode.acc_seg: 86.3344, loss: 0.2359
2022-11-29 03:12:54,962 - mmseg - INFO - Iter [28150/40000]	lr: 1.778e-05, eta: 0:53:37, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1569, decode.acc_seg: 91.5136, loss: 0.1569
2022-11-29 03:13:07,558 - mmseg - INFO - Iter [28200/40000]	lr: 1.770e-05, eta: 0:53:23, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0736, decode.acc_seg: 95.8195, loss: 0.0736
2022-11-29 03:13:20,152 - mmseg - INFO - Iter [28250/40000]	lr: 1.763e-05, eta: 0:53:09, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1335, decode.acc_seg: 91.5183, loss: 0.1335
2022-11-29 03:13:32,740 - mmseg - INFO - Iter [28300/40000]	lr: 1.755e-05, eta: 0:52:55, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1258, decode.acc_seg: 92.3414, loss: 0.1258
2022-11-29 03:13:45,344 - mmseg - INFO - Iter [28350/40000]	lr: 1.748e-05, eta: 0:52:41, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1350, decode.acc_seg: 90.6671, loss: 0.1350
2022-11-29 03:13:57,938 - mmseg - INFO - Iter [28400/40000]	lr: 1.740e-05, eta: 0:52:27, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0964, decode.acc_seg: 92.1906, loss: 0.0964
2022-11-29 03:14:10,534 - mmseg - INFO - Iter [28450/40000]	lr: 1.733e-05, eta: 0:52:13, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0944, decode.acc_seg: 93.9363, loss: 0.0944
2022-11-29 03:14:23,141 - mmseg - INFO - Iter [28500/40000]	lr: 1.725e-05, eta: 0:51:59, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1907, decode.acc_seg: 91.0089, loss: 0.1907
2022-11-29 03:14:35,801 - mmseg - INFO - Iter [28550/40000]	lr: 1.718e-05, eta: 0:51:45, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1435, decode.acc_seg: 90.6464, loss: 0.1435
2022-11-29 03:14:48,382 - mmseg - INFO - Iter [28600/40000]	lr: 1.710e-05, eta: 0:51:31, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1142, decode.acc_seg: 92.5239, loss: 0.1142
2022-11-29 03:15:00,992 - mmseg - INFO - Iter [28650/40000]	lr: 1.703e-05, eta: 0:51:17, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1147, decode.acc_seg: 93.1398, loss: 0.1147
2022-11-29 03:15:13,612 - mmseg - INFO - Iter [28700/40000]	lr: 1.695e-05, eta: 0:51:03, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1091, decode.acc_seg: 93.1253, loss: 0.1091
2022-11-29 03:15:26,322 - mmseg - INFO - Iter [28750/40000]	lr: 1.688e-05, eta: 0:50:49, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1080, decode.acc_seg: 94.2714, loss: 0.1080
2022-11-29 03:15:38,921 - mmseg - INFO - Iter [28800/40000]	lr: 1.680e-05, eta: 0:50:35, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1326, decode.acc_seg: 90.2880, loss: 0.1326
2022-11-29 03:15:51,500 - mmseg - INFO - Iter [28850/40000]	lr: 1.673e-05, eta: 0:50:21, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0757, decode.acc_seg: 94.7992, loss: 0.0757
2022-11-29 03:16:04,074 - mmseg - INFO - Iter [28900/40000]	lr: 1.665e-05, eta: 0:50:07, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0724, decode.acc_seg: 94.8893, loss: 0.0724
2022-11-29 03:16:16,630 - mmseg - INFO - Iter [28950/40000]	lr: 1.658e-05, eta: 0:49:54, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1068, decode.acc_seg: 93.8680, loss: 0.1068
2022-11-29 03:16:29,199 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:16:29,199 - mmseg - INFO - Iter [29000/40000]	lr: 1.650e-05, eta: 0:49:40, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1162, decode.acc_seg: 91.9782, loss: 0.1162
2022-11-29 03:16:41,776 - mmseg - INFO - Iter [29050/40000]	lr: 1.643e-05, eta: 0:49:26, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1013, decode.acc_seg: 94.0521, loss: 0.1013
2022-11-29 03:16:54,380 - mmseg - INFO - Iter [29100/40000]	lr: 1.635e-05, eta: 0:49:12, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1094, decode.acc_seg: 92.3331, loss: 0.1094
2022-11-29 03:17:06,972 - mmseg - INFO - Iter [29150/40000]	lr: 1.628e-05, eta: 0:48:58, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0926, decode.acc_seg: 93.5816, loss: 0.0926
2022-11-29 03:17:19,547 - mmseg - INFO - Iter [29200/40000]	lr: 1.620e-05, eta: 0:48:44, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1043, decode.acc_seg: 92.5513, loss: 0.1043
2022-11-29 03:17:32,133 - mmseg - INFO - Iter [29250/40000]	lr: 1.613e-05, eta: 0:48:30, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0951, decode.acc_seg: 94.6652, loss: 0.0951
2022-11-29 03:17:44,711 - mmseg - INFO - Iter [29300/40000]	lr: 1.605e-05, eta: 0:48:16, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0864, decode.acc_seg: 94.4007, loss: 0.0864
2022-11-29 03:17:57,340 - mmseg - INFO - Iter [29350/40000]	lr: 1.598e-05, eta: 0:48:02, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0834, decode.acc_seg: 93.7870, loss: 0.0834
2022-11-29 03:18:09,935 - mmseg - INFO - Iter [29400/40000]	lr: 1.590e-05, eta: 0:47:48, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0815, decode.acc_seg: 94.7284, loss: 0.0815
2022-11-29 03:18:22,629 - mmseg - INFO - Iter [29450/40000]	lr: 1.583e-05, eta: 0:47:35, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0805, decode.acc_seg: 94.7557, loss: 0.0805
2022-11-29 03:18:35,256 - mmseg - INFO - Iter [29500/40000]	lr: 1.575e-05, eta: 0:47:21, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1305, decode.acc_seg: 92.3425, loss: 0.1305
2022-11-29 03:18:47,867 - mmseg - INFO - Iter [29550/40000]	lr: 1.568e-05, eta: 0:47:07, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0904, decode.acc_seg: 92.9479, loss: 0.0904
2022-11-29 03:19:00,473 - mmseg - INFO - Iter [29600/40000]	lr: 1.560e-05, eta: 0:46:53, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1085, decode.acc_seg: 93.5346, loss: 0.1085
2022-11-29 03:19:13,078 - mmseg - INFO - Iter [29650/40000]	lr: 1.553e-05, eta: 0:46:39, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0755, decode.acc_seg: 94.2666, loss: 0.0755
2022-11-29 03:19:25,793 - mmseg - INFO - Iter [29700/40000]	lr: 1.545e-05, eta: 0:46:25, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0956, decode.acc_seg: 93.8104, loss: 0.0956
2022-11-29 03:19:38,386 - mmseg - INFO - Iter [29750/40000]	lr: 1.538e-05, eta: 0:46:12, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1264, decode.acc_seg: 91.4250, loss: 0.1264
2022-11-29 03:19:50,959 - mmseg - INFO - Iter [29800/40000]	lr: 1.530e-05, eta: 0:45:58, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1229, decode.acc_seg: 91.1250, loss: 0.1229
2022-11-29 03:20:03,573 - mmseg - INFO - Iter [29850/40000]	lr: 1.523e-05, eta: 0:45:44, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1194, decode.acc_seg: 92.7705, loss: 0.1194
2022-11-29 03:20:18,324 - mmseg - INFO - Iter [29900/40000]	lr: 1.515e-05, eta: 0:45:31, time: 0.295, data_time: 0.046, memory: 5537, decode.loss_ce: 0.1062, decode.acc_seg: 93.0325, loss: 0.1062
2022-11-29 03:20:30,930 - mmseg - INFO - Iter [29950/40000]	lr: 1.508e-05, eta: 0:45:17, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1076, decode.acc_seg: 92.5800, loss: 0.1076
2022-11-29 03:20:43,485 - mmseg - INFO - Saving checkpoint at 30000 iterations
2022-11-29 03:20:45,127 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:20:45,128 - mmseg - INFO - Iter [30000/40000]	lr: 1.500e-05, eta: 0:45:04, time: 0.284, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1217, decode.acc_seg: 91.9703, loss: 0.1217
2022-11-29 03:22:04,015 - mmseg - INFO - per class results:
2022-11-29 03:22:04,015 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.45 | 89.24 |
|  building  | 68.55 | 83.31 |
|  woodland  | 82.85 | 89.35 |
|   water    | 54.63 | 95.53 |
|    road    | 52.25 | 62.41 |
+------------+-------+-------+
2022-11-29 03:22:04,015 - mmseg - INFO - Summary:
2022-11-29 03:22:04,015 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 89.19 | 68.55 | 83.97 |
+-------+-------+-------+
2022-11-29 03:22:04,018 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:22:04,018 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8919, mIoU: 0.6855, mAcc: 0.8397, IoU.background: 0.8445, IoU.building: 0.6855, IoU.woodland: 0.8285, IoU.water: 0.5463, IoU.road: 0.5225, Acc.background: 0.8924, Acc.building: 0.8331, Acc.woodland: 0.8935, Acc.water: 0.9553, Acc.road: 0.6241
2022-11-29 03:22:16,662 - mmseg - INFO - Iter [30050/40000]	lr: 1.493e-05, eta: 0:45:16, time: 1.831, data_time: 1.583, memory: 5537, decode.loss_ce: 0.0847, decode.acc_seg: 95.0347, loss: 0.0847
2022-11-29 03:22:29,251 - mmseg - INFO - Iter [30100/40000]	lr: 1.485e-05, eta: 0:45:02, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1130, decode.acc_seg: 92.7564, loss: 0.1130
2022-11-29 03:22:41,849 - mmseg - INFO - Iter [30150/40000]	lr: 1.478e-05, eta: 0:44:48, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0717, decode.acc_seg: 95.4981, loss: 0.0717
2022-11-29 03:22:54,434 - mmseg - INFO - Iter [30200/40000]	lr: 1.470e-05, eta: 0:44:34, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1422, decode.acc_seg: 91.8136, loss: 0.1422
2022-11-29 03:23:07,107 - mmseg - INFO - Iter [30250/40000]	lr: 1.463e-05, eta: 0:44:20, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0894, decode.acc_seg: 94.4082, loss: 0.0894
2022-11-29 03:23:19,696 - mmseg - INFO - Iter [30300/40000]	lr: 1.455e-05, eta: 0:44:06, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0739, decode.acc_seg: 94.7328, loss: 0.0739
2022-11-29 03:23:32,308 - mmseg - INFO - Iter [30350/40000]	lr: 1.448e-05, eta: 0:43:52, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0995, decode.acc_seg: 93.6806, loss: 0.0995
2022-11-29 03:23:44,883 - mmseg - INFO - Iter [30400/40000]	lr: 1.440e-05, eta: 0:43:38, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0765, decode.acc_seg: 95.2998, loss: 0.0765
2022-11-29 03:23:57,474 - mmseg - INFO - Iter [30450/40000]	lr: 1.433e-05, eta: 0:43:24, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0827, decode.acc_seg: 94.4084, loss: 0.0827
2022-11-29 03:24:10,057 - mmseg - INFO - Iter [30500/40000]	lr: 1.425e-05, eta: 0:43:10, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0994, decode.acc_seg: 94.4122, loss: 0.0994
2022-11-29 03:24:22,669 - mmseg - INFO - Iter [30550/40000]	lr: 1.418e-05, eta: 0:42:56, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1606, decode.acc_seg: 89.4813, loss: 0.1606
2022-11-29 03:24:35,329 - mmseg - INFO - Iter [30600/40000]	lr: 1.410e-05, eta: 0:42:42, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0969, decode.acc_seg: 94.5008, loss: 0.0969
2022-11-29 03:24:47,928 - mmseg - INFO - Iter [30650/40000]	lr: 1.403e-05, eta: 0:42:28, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0908, decode.acc_seg: 95.1542, loss: 0.0908
2022-11-29 03:25:00,540 - mmseg - INFO - Iter [30700/40000]	lr: 1.395e-05, eta: 0:42:14, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1009, decode.acc_seg: 92.8561, loss: 0.1009
2022-11-29 03:25:13,167 - mmseg - INFO - Iter [30750/40000]	lr: 1.388e-05, eta: 0:42:00, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1070, decode.acc_seg: 92.5894, loss: 0.1070
2022-11-29 03:25:25,797 - mmseg - INFO - Iter [30800/40000]	lr: 1.380e-05, eta: 0:41:47, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1171, decode.acc_seg: 91.5555, loss: 0.1171
2022-11-29 03:25:38,378 - mmseg - INFO - Iter [30850/40000]	lr: 1.373e-05, eta: 0:41:33, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0776, decode.acc_seg: 95.3964, loss: 0.0776
2022-11-29 03:25:50,957 - mmseg - INFO - Iter [30900/40000]	lr: 1.365e-05, eta: 0:41:19, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0822, decode.acc_seg: 93.5916, loss: 0.0822
2022-11-29 03:26:03,534 - mmseg - INFO - Iter [30950/40000]	lr: 1.358e-05, eta: 0:41:05, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0995, decode.acc_seg: 93.3704, loss: 0.0995
2022-11-29 03:26:16,103 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:26:16,104 - mmseg - INFO - Iter [31000/40000]	lr: 1.350e-05, eta: 0:40:51, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1140, decode.acc_seg: 92.3952, loss: 0.1140
2022-11-29 03:26:28,684 - mmseg - INFO - Iter [31050/40000]	lr: 1.343e-05, eta: 0:40:37, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1061, decode.acc_seg: 93.6170, loss: 0.1061
2022-11-29 03:26:41,252 - mmseg - INFO - Iter [31100/40000]	lr: 1.335e-05, eta: 0:40:23, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1061, decode.acc_seg: 92.4317, loss: 0.1061
2022-11-29 03:26:53,830 - mmseg - INFO - Iter [31150/40000]	lr: 1.328e-05, eta: 0:40:09, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0901, decode.acc_seg: 94.0062, loss: 0.0901
2022-11-29 03:27:06,503 - mmseg - INFO - Iter [31200/40000]	lr: 1.320e-05, eta: 0:39:55, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0945, decode.acc_seg: 92.4776, loss: 0.0945
2022-11-29 03:27:19,081 - mmseg - INFO - Iter [31250/40000]	lr: 1.313e-05, eta: 0:39:41, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0857, decode.acc_seg: 93.9425, loss: 0.0857
2022-11-29 03:27:31,680 - mmseg - INFO - Iter [31300/40000]	lr: 1.305e-05, eta: 0:39:27, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0685, decode.acc_seg: 94.4717, loss: 0.0685
2022-11-29 03:27:44,295 - mmseg - INFO - Iter [31350/40000]	lr: 1.298e-05, eta: 0:39:14, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1032, decode.acc_seg: 92.6484, loss: 0.1032
2022-11-29 03:27:56,865 - mmseg - INFO - Iter [31400/40000]	lr: 1.290e-05, eta: 0:39:00, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1223, decode.acc_seg: 91.5850, loss: 0.1223
2022-11-29 03:28:09,432 - mmseg - INFO - Iter [31450/40000]	lr: 1.283e-05, eta: 0:38:46, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0936, decode.acc_seg: 93.4506, loss: 0.0936
2022-11-29 03:28:22,005 - mmseg - INFO - Iter [31500/40000]	lr: 1.275e-05, eta: 0:38:32, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0940, decode.acc_seg: 94.0672, loss: 0.0940
2022-11-29 03:28:34,580 - mmseg - INFO - Iter [31550/40000]	lr: 1.268e-05, eta: 0:38:18, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0842, decode.acc_seg: 94.0077, loss: 0.0842
2022-11-29 03:28:47,146 - mmseg - INFO - Iter [31600/40000]	lr: 1.260e-05, eta: 0:38:04, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0897, decode.acc_seg: 93.1940, loss: 0.0897
2022-11-29 03:28:59,724 - mmseg - INFO - Iter [31650/40000]	lr: 1.253e-05, eta: 0:37:50, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1003, decode.acc_seg: 93.2905, loss: 0.1003
2022-11-29 03:29:12,297 - mmseg - INFO - Iter [31700/40000]	lr: 1.245e-05, eta: 0:37:36, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0916, decode.acc_seg: 92.4361, loss: 0.0916
2022-11-29 03:29:24,942 - mmseg - INFO - Iter [31750/40000]	lr: 1.238e-05, eta: 0:37:23, time: 0.253, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0856, decode.acc_seg: 94.6826, loss: 0.0856
2022-11-29 03:29:37,575 - mmseg - INFO - Iter [31800/40000]	lr: 1.230e-05, eta: 0:37:09, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1169, decode.acc_seg: 90.4998, loss: 0.1169
2022-11-29 03:29:50,150 - mmseg - INFO - Iter [31850/40000]	lr: 1.223e-05, eta: 0:36:55, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1005, decode.acc_seg: 93.0217, loss: 0.1005
2022-11-29 03:30:02,781 - mmseg - INFO - Iter [31900/40000]	lr: 1.215e-05, eta: 0:36:41, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0931, decode.acc_seg: 93.4033, loss: 0.0931
2022-11-29 03:30:15,428 - mmseg - INFO - Iter [31950/40000]	lr: 1.208e-05, eta: 0:36:27, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0904, decode.acc_seg: 94.2603, loss: 0.0904
2022-11-29 03:30:28,155 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:30:28,155 - mmseg - INFO - Iter [32000/40000]	lr: 1.200e-05, eta: 0:36:13, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0954, decode.acc_seg: 94.1782, loss: 0.0954
2022-11-29 03:30:40,766 - mmseg - INFO - Iter [32050/40000]	lr: 1.193e-05, eta: 0:36:00, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0930, decode.acc_seg: 93.5700, loss: 0.0930
2022-11-29 03:30:53,368 - mmseg - INFO - Iter [32100/40000]	lr: 1.185e-05, eta: 0:35:46, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0946, decode.acc_seg: 94.5519, loss: 0.0946
2022-11-29 03:31:06,000 - mmseg - INFO - Iter [32150/40000]	lr: 1.178e-05, eta: 0:35:32, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0833, decode.acc_seg: 93.4089, loss: 0.0833
2022-11-29 03:31:18,686 - mmseg - INFO - Iter [32200/40000]	lr: 1.170e-05, eta: 0:35:18, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1219, decode.acc_seg: 92.0286, loss: 0.1219
2022-11-29 03:31:31,279 - mmseg - INFO - Iter [32250/40000]	lr: 1.163e-05, eta: 0:35:04, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0774, decode.acc_seg: 94.3767, loss: 0.0774
2022-11-29 03:31:43,890 - mmseg - INFO - Iter [32300/40000]	lr: 1.155e-05, eta: 0:34:50, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0804, decode.acc_seg: 94.7661, loss: 0.0804
2022-11-29 03:31:56,480 - mmseg - INFO - Iter [32350/40000]	lr: 1.148e-05, eta: 0:34:37, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1000, decode.acc_seg: 93.1005, loss: 0.1000
2022-11-29 03:32:09,084 - mmseg - INFO - Iter [32400/40000]	lr: 1.140e-05, eta: 0:34:23, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1127, decode.acc_seg: 92.3928, loss: 0.1127
2022-11-29 03:32:21,830 - mmseg - INFO - Iter [32450/40000]	lr: 1.133e-05, eta: 0:34:09, time: 0.255, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0998, decode.acc_seg: 93.0454, loss: 0.0998
2022-11-29 03:32:34,451 - mmseg - INFO - Iter [32500/40000]	lr: 1.125e-05, eta: 0:33:55, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1006, decode.acc_seg: 93.3884, loss: 0.1006
2022-11-29 03:32:47,030 - mmseg - INFO - Iter [32550/40000]	lr: 1.118e-05, eta: 0:33:42, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1228, decode.acc_seg: 92.3557, loss: 0.1228
2022-11-29 03:32:59,580 - mmseg - INFO - Iter [32600/40000]	lr: 1.110e-05, eta: 0:33:28, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1276, decode.acc_seg: 91.7001, loss: 0.1276
2022-11-29 03:33:12,113 - mmseg - INFO - Iter [32650/40000]	lr: 1.103e-05, eta: 0:33:14, time: 0.251, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0933, decode.acc_seg: 92.4718, loss: 0.0933
2022-11-29 03:33:24,661 - mmseg - INFO - Iter [32700/40000]	lr: 1.095e-05, eta: 0:33:00, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0818, decode.acc_seg: 94.6143, loss: 0.0818
2022-11-29 03:33:37,219 - mmseg - INFO - Iter [32750/40000]	lr: 1.088e-05, eta: 0:32:46, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0669, decode.acc_seg: 95.7432, loss: 0.0669
2022-11-29 03:33:49,787 - mmseg - INFO - Iter [32800/40000]	lr: 1.080e-05, eta: 0:32:33, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0854, decode.acc_seg: 92.8369, loss: 0.0854
2022-11-29 03:34:02,354 - mmseg - INFO - Iter [32850/40000]	lr: 1.073e-05, eta: 0:32:19, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1011, decode.acc_seg: 93.6215, loss: 0.1011
2022-11-29 03:34:14,903 - mmseg - INFO - Iter [32900/40000]	lr: 1.065e-05, eta: 0:32:05, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0924, decode.acc_seg: 94.6144, loss: 0.0924
2022-11-29 03:34:27,525 - mmseg - INFO - Iter [32950/40000]	lr: 1.058e-05, eta: 0:31:51, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0907, decode.acc_seg: 93.8715, loss: 0.0907
2022-11-29 03:34:40,108 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:34:40,108 - mmseg - INFO - Iter [33000/40000]	lr: 1.050e-05, eta: 0:31:37, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1103, decode.acc_seg: 92.2914, loss: 0.1103
2022-11-29 03:34:52,651 - mmseg - INFO - Iter [33050/40000]	lr: 1.043e-05, eta: 0:31:24, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1063, decode.acc_seg: 92.4571, loss: 0.1063
2022-11-29 03:35:05,200 - mmseg - INFO - Iter [33100/40000]	lr: 1.035e-05, eta: 0:31:10, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0941, decode.acc_seg: 93.3203, loss: 0.0941
2022-11-29 03:35:17,849 - mmseg - INFO - Iter [33150/40000]	lr: 1.028e-05, eta: 0:30:56, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0956, decode.acc_seg: 93.9354, loss: 0.0956
2022-11-29 03:35:30,451 - mmseg - INFO - Iter [33200/40000]	lr: 1.020e-05, eta: 0:30:42, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1111, decode.acc_seg: 92.5003, loss: 0.1111
2022-11-29 03:35:42,995 - mmseg - INFO - Iter [33250/40000]	lr: 1.013e-05, eta: 0:30:29, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0760, decode.acc_seg: 94.9571, loss: 0.0760
2022-11-29 03:35:55,551 - mmseg - INFO - Iter [33300/40000]	lr: 1.005e-05, eta: 0:30:15, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0934, decode.acc_seg: 93.4062, loss: 0.0934
2022-11-29 03:36:08,290 - mmseg - INFO - Iter [33350/40000]	lr: 9.976e-06, eta: 0:30:01, time: 0.255, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0848, decode.acc_seg: 93.3745, loss: 0.0848
2022-11-29 03:36:21,122 - mmseg - INFO - Iter [33400/40000]	lr: 9.901e-06, eta: 0:29:48, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0893, decode.acc_seg: 93.5262, loss: 0.0893
2022-11-29 03:36:33,957 - mmseg - INFO - Iter [33450/40000]	lr: 9.826e-06, eta: 0:29:34, time: 0.257, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0780, decode.acc_seg: 94.7074, loss: 0.0780
2022-11-29 03:36:46,599 - mmseg - INFO - Iter [33500/40000]	lr: 9.752e-06, eta: 0:29:20, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0612, decode.acc_seg: 95.9452, loss: 0.0612
2022-11-29 03:36:59,253 - mmseg - INFO - Iter [33550/40000]	lr: 9.676e-06, eta: 0:29:06, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0955, decode.acc_seg: 94.1732, loss: 0.0955
2022-11-29 03:37:11,880 - mmseg - INFO - Iter [33600/40000]	lr: 9.601e-06, eta: 0:28:53, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1013, decode.acc_seg: 93.6055, loss: 0.1013
2022-11-29 03:37:24,465 - mmseg - INFO - Iter [33650/40000]	lr: 9.527e-06, eta: 0:28:39, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1036, decode.acc_seg: 92.8114, loss: 0.1036
2022-11-29 03:37:37,058 - mmseg - INFO - Iter [33700/40000]	lr: 9.452e-06, eta: 0:28:25, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0805, decode.acc_seg: 94.5899, loss: 0.0805
2022-11-29 03:37:49,634 - mmseg - INFO - Iter [33750/40000]	lr: 9.377e-06, eta: 0:28:12, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1067, decode.acc_seg: 92.7068, loss: 0.1067
2022-11-29 03:38:02,214 - mmseg - INFO - Iter [33800/40000]	lr: 9.301e-06, eta: 0:27:58, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0850, decode.acc_seg: 92.6145, loss: 0.0850
2022-11-29 03:38:14,786 - mmseg - INFO - Iter [33850/40000]	lr: 9.227e-06, eta: 0:27:44, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1026, decode.acc_seg: 93.1766, loss: 0.1026
2022-11-29 03:38:27,378 - mmseg - INFO - Iter [33900/40000]	lr: 9.152e-06, eta: 0:27:30, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0955, decode.acc_seg: 92.7208, loss: 0.0955
2022-11-29 03:38:39,940 - mmseg - INFO - Iter [33950/40000]	lr: 9.077e-06, eta: 0:27:17, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0773, decode.acc_seg: 94.3660, loss: 0.0773
2022-11-29 03:38:52,542 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:38:52,542 - mmseg - INFO - Iter [34000/40000]	lr: 9.001e-06, eta: 0:27:03, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1065, decode.acc_seg: 91.9614, loss: 0.1065
2022-11-29 03:39:05,122 - mmseg - INFO - Iter [34050/40000]	lr: 8.926e-06, eta: 0:26:49, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1045, decode.acc_seg: 93.5160, loss: 0.1045
2022-11-29 03:39:17,771 - mmseg - INFO - Iter [34100/40000]	lr: 8.852e-06, eta: 0:26:36, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0852, decode.acc_seg: 94.4085, loss: 0.0852
2022-11-29 03:39:30,411 - mmseg - INFO - Iter [34150/40000]	lr: 8.777e-06, eta: 0:26:22, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1195, decode.acc_seg: 90.6606, loss: 0.1195
2022-11-29 03:39:42,985 - mmseg - INFO - Iter [34200/40000]	lr: 8.701e-06, eta: 0:26:08, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0887, decode.acc_seg: 92.9680, loss: 0.0887
2022-11-29 03:39:55,560 - mmseg - INFO - Iter [34250/40000]	lr: 8.626e-06, eta: 0:25:55, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0959, decode.acc_seg: 93.9132, loss: 0.0959
2022-11-29 03:40:08,156 - mmseg - INFO - Iter [34300/40000]	lr: 8.552e-06, eta: 0:25:41, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0927, decode.acc_seg: 94.2602, loss: 0.0927
2022-11-29 03:40:20,744 - mmseg - INFO - Iter [34350/40000]	lr: 8.477e-06, eta: 0:25:27, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0820, decode.acc_seg: 93.9213, loss: 0.0820
2022-11-29 03:40:33,327 - mmseg - INFO - Iter [34400/40000]	lr: 8.401e-06, eta: 0:25:14, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0743, decode.acc_seg: 94.6916, loss: 0.0743
2022-11-29 03:40:46,038 - mmseg - INFO - Iter [34450/40000]	lr: 8.326e-06, eta: 0:25:00, time: 0.254, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0982, decode.acc_seg: 92.9550, loss: 0.0982
2022-11-29 03:40:58,604 - mmseg - INFO - Iter [34500/40000]	lr: 8.252e-06, eta: 0:24:46, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0878, decode.acc_seg: 94.2988, loss: 0.0878
2022-11-29 03:41:11,139 - mmseg - INFO - Iter [34550/40000]	lr: 8.177e-06, eta: 0:24:33, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1006, decode.acc_seg: 93.2977, loss: 0.1006
2022-11-29 03:41:23,663 - mmseg - INFO - Iter [34600/40000]	lr: 8.101e-06, eta: 0:24:19, time: 0.250, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1508, decode.acc_seg: 91.8596, loss: 0.1508
2022-11-29 03:41:36,186 - mmseg - INFO - Iter [34650/40000]	lr: 8.026e-06, eta: 0:24:05, time: 0.250, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0858, decode.acc_seg: 93.9526, loss: 0.0858
2022-11-29 03:41:48,741 - mmseg - INFO - Iter [34700/40000]	lr: 7.952e-06, eta: 0:23:52, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1008, decode.acc_seg: 92.8781, loss: 0.1008
2022-11-29 03:42:01,286 - mmseg - INFO - Iter [34750/40000]	lr: 7.877e-06, eta: 0:23:38, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0936, decode.acc_seg: 93.0130, loss: 0.0936
2022-11-29 03:42:13,855 - mmseg - INFO - Iter [34800/40000]	lr: 7.801e-06, eta: 0:23:24, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0961, decode.acc_seg: 93.1029, loss: 0.0961
2022-11-29 03:42:26,403 - mmseg - INFO - Iter [34850/40000]	lr: 7.726e-06, eta: 0:23:11, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0967, decode.acc_seg: 94.0526, loss: 0.0967
2022-11-29 03:42:38,956 - mmseg - INFO - Iter [34900/40000]	lr: 7.651e-06, eta: 0:22:57, time: 0.251, data_time: 0.006, memory: 5537, decode.loss_ce: 0.1001, decode.acc_seg: 92.8856, loss: 0.1001
2022-11-29 03:42:51,478 - mmseg - INFO - Iter [34950/40000]	lr: 7.577e-06, eta: 0:22:43, time: 0.250, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1079, decode.acc_seg: 93.4248, loss: 0.1079
2022-11-29 03:43:04,066 - mmseg - INFO - Saving checkpoint at 35000 iterations
2022-11-29 03:43:06,757 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:43:06,757 - mmseg - INFO - Iter [35000/40000]	lr: 7.502e-06, eta: 0:22:30, time: 0.306, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1048, decode.acc_seg: 93.1560, loss: 0.1048
2022-11-29 03:44:26,174 - mmseg - INFO - per class results:
2022-11-29 03:44:26,175 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 82.61 | 87.26 |
|  building  | 55.82 | 91.55 |
|  woodland  | 81.08 | 86.34 |
|   water    | 46.97 | 96.18 |
|    road    |  52.2 | 69.64 |
+------------+-------+-------+
2022-11-29 03:44:26,175 - mmseg - INFO - Summary:
2022-11-29 03:44:26,175 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 87.27 | 63.74 | 86.2 |
+-------+-------+------+
2022-11-29 03:44:26,178 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:44:26,178 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.8727, mIoU: 0.6374, mAcc: 0.8620, IoU.background: 0.8261, IoU.building: 0.5582, IoU.woodland: 0.8108, IoU.water: 0.4697, IoU.road: 0.5220, Acc.background: 0.8726, Acc.building: 0.9155, Acc.woodland: 0.8634, Acc.water: 0.9618, Acc.road: 0.6964
2022-11-29 03:44:38,809 - mmseg - INFO - Iter [35050/40000]	lr: 7.426e-06, eta: 0:22:28, time: 1.841, data_time: 1.594, memory: 5537, decode.loss_ce: 0.1033, decode.acc_seg: 91.9720, loss: 0.1033
2022-11-29 03:44:51,403 - mmseg - INFO - Iter [35100/40000]	lr: 7.351e-06, eta: 0:22:14, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1059, decode.acc_seg: 92.5666, loss: 0.1059
2022-11-29 03:45:04,028 - mmseg - INFO - Iter [35150/40000]	lr: 7.277e-06, eta: 0:22:00, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0789, decode.acc_seg: 94.6426, loss: 0.0789
2022-11-29 03:45:16,591 - mmseg - INFO - Iter [35200/40000]	lr: 7.202e-06, eta: 0:21:46, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0730, decode.acc_seg: 94.7418, loss: 0.0730
2022-11-29 03:45:29,245 - mmseg - INFO - Iter [35250/40000]	lr: 7.126e-06, eta: 0:21:33, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1113, decode.acc_seg: 93.1087, loss: 0.1113
2022-11-29 03:45:41,819 - mmseg - INFO - Iter [35300/40000]	lr: 7.051e-06, eta: 0:21:19, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0950, decode.acc_seg: 93.3389, loss: 0.0950
2022-11-29 03:45:54,386 - mmseg - INFO - Iter [35350/40000]	lr: 6.977e-06, eta: 0:21:05, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0976, decode.acc_seg: 93.4590, loss: 0.0976
2022-11-29 03:46:07,012 - mmseg - INFO - Iter [35400/40000]	lr: 6.902e-06, eta: 0:20:51, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0653, decode.acc_seg: 94.7001, loss: 0.0653
2022-11-29 03:46:19,613 - mmseg - INFO - Iter [35450/40000]	lr: 6.826e-06, eta: 0:20:38, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1314, decode.acc_seg: 91.3205, loss: 0.1314
2022-11-29 03:46:32,274 - mmseg - INFO - Iter [35500/40000]	lr: 6.751e-06, eta: 0:20:24, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0787, decode.acc_seg: 94.5775, loss: 0.0787
2022-11-29 03:46:44,873 - mmseg - INFO - Iter [35550/40000]	lr: 6.677e-06, eta: 0:20:10, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1225, decode.acc_seg: 93.0389, loss: 0.1225
2022-11-29 03:46:57,489 - mmseg - INFO - Iter [35600/40000]	lr: 6.602e-06, eta: 0:19:57, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1183, decode.acc_seg: 92.9775, loss: 0.1183
2022-11-29 03:47:10,163 - mmseg - INFO - Iter [35650/40000]	lr: 6.526e-06, eta: 0:19:43, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1224, decode.acc_seg: 92.1980, loss: 0.1224
2022-11-29 03:47:22,777 - mmseg - INFO - Iter [35700/40000]	lr: 6.451e-06, eta: 0:19:29, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1278, decode.acc_seg: 93.0942, loss: 0.1278
2022-11-29 03:47:35,386 - mmseg - INFO - Iter [35750/40000]	lr: 6.377e-06, eta: 0:19:15, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0799, decode.acc_seg: 95.1190, loss: 0.0799
2022-11-29 03:47:47,980 - mmseg - INFO - Iter [35800/40000]	lr: 6.302e-06, eta: 0:19:02, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1131, decode.acc_seg: 92.0917, loss: 0.1131
2022-11-29 03:48:00,585 - mmseg - INFO - Iter [35850/40000]	lr: 6.226e-06, eta: 0:18:48, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0841, decode.acc_seg: 93.9123, loss: 0.0841
2022-11-29 03:48:13,177 - mmseg - INFO - Iter [35900/40000]	lr: 6.151e-06, eta: 0:18:34, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0838, decode.acc_seg: 94.7473, loss: 0.0838
2022-11-29 03:48:25,800 - mmseg - INFO - Iter [35950/40000]	lr: 6.077e-06, eta: 0:18:21, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0926, decode.acc_seg: 93.7339, loss: 0.0926
2022-11-29 03:48:38,385 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:48:38,386 - mmseg - INFO - Iter [36000/40000]	lr: 6.002e-06, eta: 0:18:07, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0834, decode.acc_seg: 94.4430, loss: 0.0834
2022-11-29 03:48:50,985 - mmseg - INFO - Iter [36050/40000]	lr: 5.926e-06, eta: 0:17:53, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0746, decode.acc_seg: 95.4078, loss: 0.0746
2022-11-29 03:49:03,608 - mmseg - INFO - Iter [36100/40000]	lr: 5.851e-06, eta: 0:17:39, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0803, decode.acc_seg: 94.4830, loss: 0.0803
2022-11-29 03:49:16,124 - mmseg - INFO - Iter [36150/40000]	lr: 5.777e-06, eta: 0:17:26, time: 0.250, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0643, decode.acc_seg: 95.0863, loss: 0.0643
2022-11-29 03:49:28,722 - mmseg - INFO - Iter [36200/40000]	lr: 5.702e-06, eta: 0:17:12, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1534, decode.acc_seg: 91.3334, loss: 0.1534
2022-11-29 03:49:41,278 - mmseg - INFO - Iter [36250/40000]	lr: 5.627e-06, eta: 0:16:58, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0869, decode.acc_seg: 94.2898, loss: 0.0869
2022-11-29 03:49:53,847 - mmseg - INFO - Iter [36300/40000]	lr: 5.551e-06, eta: 0:16:45, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0873, decode.acc_seg: 93.5867, loss: 0.0873
2022-11-29 03:50:06,400 - mmseg - INFO - Iter [36350/40000]	lr: 5.476e-06, eta: 0:16:31, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0872, decode.acc_seg: 94.9364, loss: 0.0872
2022-11-29 03:50:18,962 - mmseg - INFO - Iter [36400/40000]	lr: 5.402e-06, eta: 0:16:17, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0715, decode.acc_seg: 95.0176, loss: 0.0715
2022-11-29 03:50:31,542 - mmseg - INFO - Iter [36450/40000]	lr: 5.327e-06, eta: 0:16:04, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0971, decode.acc_seg: 94.0583, loss: 0.0971
2022-11-29 03:50:44,073 - mmseg - INFO - Iter [36500/40000]	lr: 5.251e-06, eta: 0:15:50, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0736, decode.acc_seg: 95.1930, loss: 0.0736
2022-11-29 03:50:56,607 - mmseg - INFO - Iter [36550/40000]	lr: 5.176e-06, eta: 0:15:36, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1107, decode.acc_seg: 91.2282, loss: 0.1107
2022-11-29 03:51:09,229 - mmseg - INFO - Iter [36600/40000]	lr: 5.102e-06, eta: 0:15:23, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1344, decode.acc_seg: 90.4242, loss: 0.1344
2022-11-29 03:51:21,857 - mmseg - INFO - Iter [36650/40000]	lr: 5.027e-06, eta: 0:15:09, time: 0.253, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0865, decode.acc_seg: 94.8873, loss: 0.0865
2022-11-29 03:51:34,438 - mmseg - INFO - Iter [36700/40000]	lr: 4.951e-06, eta: 0:14:55, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1159, decode.acc_seg: 92.3819, loss: 0.1159
2022-11-29 03:51:47,042 - mmseg - INFO - Iter [36750/40000]	lr: 4.876e-06, eta: 0:14:42, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1081, decode.acc_seg: 93.3601, loss: 0.1081
2022-11-29 03:51:59,650 - mmseg - INFO - Iter [36800/40000]	lr: 4.802e-06, eta: 0:14:28, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1132, decode.acc_seg: 92.7524, loss: 0.1132
2022-11-29 03:52:12,215 - mmseg - INFO - Iter [36850/40000]	lr: 4.727e-06, eta: 0:14:14, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0981, decode.acc_seg: 93.2681, loss: 0.0981
2022-11-29 03:52:24,781 - mmseg - INFO - Iter [36900/40000]	lr: 4.651e-06, eta: 0:14:01, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0968, decode.acc_seg: 93.7774, loss: 0.0968
2022-11-29 03:52:37,347 - mmseg - INFO - Iter [36950/40000]	lr: 4.576e-06, eta: 0:13:47, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0992, decode.acc_seg: 94.2778, loss: 0.0992
2022-11-29 03:52:49,916 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:52:49,916 - mmseg - INFO - Iter [37000/40000]	lr: 4.502e-06, eta: 0:13:33, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0954, decode.acc_seg: 93.1264, loss: 0.0954
2022-11-29 03:53:02,578 - mmseg - INFO - Iter [37050/40000]	lr: 4.427e-06, eta: 0:13:20, time: 0.253, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0838, decode.acc_seg: 94.2650, loss: 0.0838
2022-11-29 03:53:15,248 - mmseg - INFO - Iter [37100/40000]	lr: 4.351e-06, eta: 0:13:06, time: 0.253, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0839, decode.acc_seg: 94.3578, loss: 0.0839
2022-11-29 03:53:27,951 - mmseg - INFO - Iter [37150/40000]	lr: 4.276e-06, eta: 0:12:52, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1299, decode.acc_seg: 92.3733, loss: 0.1299
2022-11-29 03:53:40,570 - mmseg - INFO - Iter [37200/40000]	lr: 4.202e-06, eta: 0:12:39, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0964, decode.acc_seg: 92.3965, loss: 0.0964
2022-11-29 03:53:53,146 - mmseg - INFO - Iter [37250/40000]	lr: 4.127e-06, eta: 0:12:25, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1281, decode.acc_seg: 93.0564, loss: 0.1281
2022-11-29 03:54:05,735 - mmseg - INFO - Iter [37300/40000]	lr: 4.051e-06, eta: 0:12:12, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1189, decode.acc_seg: 92.1478, loss: 0.1189
2022-11-29 03:54:18,353 - mmseg - INFO - Iter [37350/40000]	lr: 3.976e-06, eta: 0:11:58, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1020, decode.acc_seg: 93.5329, loss: 0.1020
2022-11-29 03:54:33,198 - mmseg - INFO - Iter [37400/40000]	lr: 3.901e-06, eta: 0:11:44, time: 0.297, data_time: 0.047, memory: 5537, decode.loss_ce: 0.0784, decode.acc_seg: 94.1676, loss: 0.0784
2022-11-29 03:54:45,838 - mmseg - INFO - Iter [37450/40000]	lr: 3.827e-06, eta: 0:11:31, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0980, decode.acc_seg: 93.8600, loss: 0.0980
2022-11-29 03:54:58,470 - mmseg - INFO - Iter [37500/40000]	lr: 3.752e-06, eta: 0:11:17, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0829, decode.acc_seg: 93.4791, loss: 0.0829
2022-11-29 03:55:11,192 - mmseg - INFO - Iter [37550/40000]	lr: 3.676e-06, eta: 0:11:04, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0639, decode.acc_seg: 95.2125, loss: 0.0639
2022-11-29 03:55:23,844 - mmseg - INFO - Iter [37600/40000]	lr: 3.601e-06, eta: 0:10:50, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0749, decode.acc_seg: 95.2312, loss: 0.0749
2022-11-29 03:55:36,488 - mmseg - INFO - Iter [37650/40000]	lr: 3.527e-06, eta: 0:10:36, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0949, decode.acc_seg: 94.9261, loss: 0.0949
2022-11-29 03:55:49,100 - mmseg - INFO - Iter [37700/40000]	lr: 3.452e-06, eta: 0:10:23, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0508, decode.acc_seg: 96.4699, loss: 0.0508
2022-11-29 03:56:01,733 - mmseg - INFO - Iter [37750/40000]	lr: 3.376e-06, eta: 0:10:09, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1037, decode.acc_seg: 93.7511, loss: 0.1037
2022-11-29 03:56:14,334 - mmseg - INFO - Iter [37800/40000]	lr: 3.301e-06, eta: 0:09:56, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0959, decode.acc_seg: 93.9029, loss: 0.0959
2022-11-29 03:56:26,959 - mmseg - INFO - Iter [37850/40000]	lr: 3.227e-06, eta: 0:09:42, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0819, decode.acc_seg: 94.6766, loss: 0.0819
2022-11-29 03:56:39,578 - mmseg - INFO - Iter [37900/40000]	lr: 3.152e-06, eta: 0:09:28, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0870, decode.acc_seg: 93.9061, loss: 0.0870
2022-11-29 03:56:52,191 - mmseg - INFO - Iter [37950/40000]	lr: 3.076e-06, eta: 0:09:15, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1296, decode.acc_seg: 91.3047, loss: 0.1296
2022-11-29 03:57:04,829 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 03:57:04,829 - mmseg - INFO - Iter [38000/40000]	lr: 3.001e-06, eta: 0:09:01, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1024, decode.acc_seg: 93.2839, loss: 0.1024
2022-11-29 03:57:17,439 - mmseg - INFO - Iter [38050/40000]	lr: 2.927e-06, eta: 0:08:48, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0990, decode.acc_seg: 91.7548, loss: 0.0990
2022-11-29 03:57:30,075 - mmseg - INFO - Iter [38100/40000]	lr: 2.852e-06, eta: 0:08:34, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1203, decode.acc_seg: 92.0387, loss: 0.1203
2022-11-29 03:57:42,649 - mmseg - INFO - Iter [38150/40000]	lr: 2.776e-06, eta: 0:08:20, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1033, decode.acc_seg: 92.8025, loss: 0.1033
2022-11-29 03:57:55,241 - mmseg - INFO - Iter [38200/40000]	lr: 2.701e-06, eta: 0:08:07, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0929, decode.acc_seg: 94.7344, loss: 0.0929
2022-11-29 03:58:07,833 - mmseg - INFO - Iter [38250/40000]	lr: 2.627e-06, eta: 0:07:53, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0934, decode.acc_seg: 93.9437, loss: 0.0934
2022-11-29 03:58:20,408 - mmseg - INFO - Iter [38300/40000]	lr: 2.552e-06, eta: 0:07:40, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0764, decode.acc_seg: 94.7669, loss: 0.0764
2022-11-29 03:58:32,995 - mmseg - INFO - Iter [38350/40000]	lr: 2.476e-06, eta: 0:07:26, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0835, decode.acc_seg: 94.2897, loss: 0.0835
2022-11-29 03:58:45,595 - mmseg - INFO - Iter [38400/40000]	lr: 2.401e-06, eta: 0:07:13, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1137, decode.acc_seg: 92.6927, loss: 0.1137
2022-11-29 03:58:58,214 - mmseg - INFO - Iter [38450/40000]	lr: 2.327e-06, eta: 0:06:59, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1063, decode.acc_seg: 94.4856, loss: 0.1063
2022-11-29 03:59:10,916 - mmseg - INFO - Iter [38500/40000]	lr: 2.252e-06, eta: 0:06:45, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0917, decode.acc_seg: 93.3081, loss: 0.0917
2022-11-29 03:59:23,552 - mmseg - INFO - Iter [38550/40000]	lr: 2.176e-06, eta: 0:06:32, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0543, decode.acc_seg: 94.8925, loss: 0.0543
2022-11-29 03:59:36,265 - mmseg - INFO - Iter [38600/40000]	lr: 2.101e-06, eta: 0:06:18, time: 0.254, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1152, decode.acc_seg: 92.6208, loss: 0.1152
2022-11-29 03:59:48,887 - mmseg - INFO - Iter [38650/40000]	lr: 2.026e-06, eta: 0:06:05, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0956, decode.acc_seg: 93.7210, loss: 0.0956
2022-11-29 04:00:01,542 - mmseg - INFO - Iter [38700/40000]	lr: 1.952e-06, eta: 0:05:51, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0907, decode.acc_seg: 93.4293, loss: 0.0907
2022-11-29 04:00:14,188 - mmseg - INFO - Iter [38750/40000]	lr: 1.877e-06, eta: 0:05:38, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0731, decode.acc_seg: 95.1711, loss: 0.0731
2022-11-29 04:00:26,855 - mmseg - INFO - Iter [38800/40000]	lr: 1.801e-06, eta: 0:05:24, time: 0.253, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0744, decode.acc_seg: 94.9323, loss: 0.0744
2022-11-29 04:00:39,443 - mmseg - INFO - Iter [38850/40000]	lr: 1.726e-06, eta: 0:05:11, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0825, decode.acc_seg: 94.4636, loss: 0.0825
2022-11-29 04:00:52,033 - mmseg - INFO - Iter [38900/40000]	lr: 1.652e-06, eta: 0:04:57, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1135, decode.acc_seg: 93.7082, loss: 0.1135
2022-11-29 04:01:04,637 - mmseg - INFO - Iter [38950/40000]	lr: 1.577e-06, eta: 0:04:43, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0773, decode.acc_seg: 94.1823, loss: 0.0773
2022-11-29 04:01:17,257 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 04:01:17,257 - mmseg - INFO - Iter [39000/40000]	lr: 1.501e-06, eta: 0:04:30, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1060, decode.acc_seg: 93.4294, loss: 0.1060
2022-11-29 04:01:29,870 - mmseg - INFO - Iter [39050/40000]	lr: 1.426e-06, eta: 0:04:16, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0810, decode.acc_seg: 94.8705, loss: 0.0810
2022-11-29 04:01:42,427 - mmseg - INFO - Iter [39100/40000]	lr: 1.352e-06, eta: 0:04:03, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0870, decode.acc_seg: 94.6110, loss: 0.0870
2022-11-29 04:01:54,986 - mmseg - INFO - Iter [39150/40000]	lr: 1.277e-06, eta: 0:03:49, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0789, decode.acc_seg: 94.1799, loss: 0.0789
2022-11-29 04:02:07,559 - mmseg - INFO - Iter [39200/40000]	lr: 1.201e-06, eta: 0:03:36, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1042, decode.acc_seg: 91.8859, loss: 0.1042
2022-11-29 04:02:20,141 - mmseg - INFO - Iter [39250/40000]	lr: 1.126e-06, eta: 0:03:22, time: 0.252, data_time: 0.006, memory: 5537, decode.loss_ce: 0.0974, decode.acc_seg: 93.4330, loss: 0.0974
2022-11-29 04:02:32,714 - mmseg - INFO - Iter [39300/40000]	lr: 1.052e-06, eta: 0:03:09, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0936, decode.acc_seg: 93.5977, loss: 0.0936
2022-11-29 04:02:45,273 - mmseg - INFO - Iter [39350/40000]	lr: 9.765e-07, eta: 0:02:55, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1021, decode.acc_seg: 92.7985, loss: 0.1021
2022-11-29 04:02:57,875 - mmseg - INFO - Iter [39400/40000]	lr: 9.015e-07, eta: 0:02:42, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0959, decode.acc_seg: 91.9404, loss: 0.0959
2022-11-29 04:03:10,498 - mmseg - INFO - Iter [39450/40000]	lr: 8.265e-07, eta: 0:02:28, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0729, decode.acc_seg: 95.1736, loss: 0.0729
2022-11-29 04:03:23,069 - mmseg - INFO - Iter [39500/40000]	lr: 7.515e-07, eta: 0:02:15, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0796, decode.acc_seg: 95.5574, loss: 0.0796
2022-11-29 04:03:35,626 - mmseg - INFO - Iter [39550/40000]	lr: 6.765e-07, eta: 0:02:01, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0947, decode.acc_seg: 92.8637, loss: 0.0947
2022-11-29 04:03:48,184 - mmseg - INFO - Iter [39600/40000]	lr: 6.015e-07, eta: 0:01:48, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1140, decode.acc_seg: 91.3689, loss: 0.1140
2022-11-29 04:04:00,753 - mmseg - INFO - Iter [39650/40000]	lr: 5.265e-07, eta: 0:01:34, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1134, decode.acc_seg: 91.9715, loss: 0.1134
2022-11-29 04:04:13,305 - mmseg - INFO - Iter [39700/40000]	lr: 4.515e-07, eta: 0:01:21, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0764, decode.acc_seg: 94.5553, loss: 0.0764
2022-11-29 04:04:25,869 - mmseg - INFO - Iter [39750/40000]	lr: 3.765e-07, eta: 0:01:07, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1057, decode.acc_seg: 93.2329, loss: 0.1057
2022-11-29 04:04:38,491 - mmseg - INFO - Iter [39800/40000]	lr: 3.015e-07, eta: 0:00:53, time: 0.252, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0738, decode.acc_seg: 93.7953, loss: 0.0738
2022-11-29 04:04:51,053 - mmseg - INFO - Iter [39850/40000]	lr: 2.265e-07, eta: 0:00:40, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1154, decode.acc_seg: 91.9097, loss: 0.1154
2022-11-29 04:05:03,621 - mmseg - INFO - Iter [39900/40000]	lr: 1.515e-07, eta: 0:00:26, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0988, decode.acc_seg: 92.8364, loss: 0.0988
2022-11-29 04:05:16,179 - mmseg - INFO - Iter [39950/40000]	lr: 7.650e-08, eta: 0:00:13, time: 0.251, data_time: 0.005, memory: 5537, decode.loss_ce: 0.0782, decode.acc_seg: 94.4677, loss: 0.0782
2022-11-29 04:05:28,778 - mmseg - INFO - Saving checkpoint at 40000 iterations
2022-11-29 04:05:31,418 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 04:05:31,418 - mmseg - INFO - Iter [40000/40000]	lr: 1.500e-09, eta: 0:00:00, time: 0.305, data_time: 0.005, memory: 5537, decode.loss_ce: 0.1049, decode.acc_seg: 92.0836, loss: 0.1049
2022-11-29 04:06:50,382 - mmseg - INFO - per class results:
2022-11-29 04:06:50,383 - mmseg - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 86.32 | 90.71 |
|  building  | 66.03 | 87.29 |
|  woodland  | 84.11 | 90.19 |
|   water    | 60.41 | 96.73 |
|    road    | 52.99 | 64.55 |
+------------+-------+-------+
2022-11-29 04:06:50,383 - mmseg - INFO - Summary:
2022-11-29 04:06:50,383 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 90.47 | 69.97 | 85.89 |
+-------+-------+-------+
2022-11-29 04:06:50,386 - mmseg - INFO - Exp name: segnext.large.512x512.landcover.40k_weight.py
2022-11-29 04:06:50,386 - mmseg - INFO - Iter(val) [1602]	aAcc: 0.9047, mIoU: 0.6997, mAcc: 0.8589, IoU.background: 0.8632, IoU.building: 0.6603, IoU.woodland: 0.8411, IoU.water: 0.6041, IoU.road: 0.5299, Acc.background: 0.9071, Acc.building: 0.8729, Acc.woodland: 0.9019, Acc.water: 0.9673, Acc.road: 0.6455
